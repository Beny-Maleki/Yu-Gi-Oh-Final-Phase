Index: src/main/java/model/cards/cardsActions/monsterActionChildren/MakeAttackerMonsterAtkZero.java
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/monsterActionChildren/MakeAttackerMonsterAtkZero.java b/src/main/java/model/cards/cardsActions/monsterActionChildren/MakeAttackerMonsterAtkZero.java
deleted file mode 100644
--- a/src/main/java/model/cards/cardsActions/monsterActionChildren/MakeAttackerMonsterAtkZero.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ /dev/null	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
@@ -1,25 +0,0 @@
-package model.cards.cardsActions.monsterActionChildren;
-
-import model.cards.cardsActions.Action;
-import model.cards.cardsProp.MonsterCard;
-import model.enums.GameEnums.SideOfFeature;
-import model.gameprop.Player;
-import model.gameprop.gamemodel.Game;
-
-public class MakeAttackerMonsterAtkZero extends Action {
-
-    {
-        name = this.getClass().getSimpleName();
-    }
-
-    public MakeAttackerMonsterAtkZero() {
-    }
-
-    @Override
-    public void active(Game game) {
-        Player opponent = game.getPlayer(SideOfFeature.OPPONENT);
-        MonsterCard suijin = (MonsterCard) game.getCardProp().getCard(); // attacked monster
-        //
-        isActivatedBefore = true;
-    }
-}
Index: src/main/java/model/gameprop/existenceBasedObserver/FieldCardObserver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/gameprop/existenceBasedObserver/FieldCardObserver.java b/src/main/java/model/gameprop/existenceBasedObserver/FieldCardObserver.java
new file mode 100644
--- /dev/null	(date 1622140509607)
+++ b/src/main/java/model/gameprop/existenceBasedObserver/FieldCardObserver.java	(date 1622140509607)
@@ -0,0 +1,84 @@
+package model.gameprop.existenceBasedObserver;
+
+import model.cards.cardsActions.Action;
+import model.cards.cardsActions.magicActionChildren.ChangingMonsterAttackAction;
+import model.cards.cardsActions.magicActionChildren.ChangingMonsterAttackWithGraveyardsMonster;
+import model.cards.cardsActions.magicActionChildren.ChangingMonsterDefenceAction;
+import model.cards.cardsProp.Card;
+import model.cards.cardsProp.MagicCard;
+import model.enums.GameEnums.SideOfFeature;
+import model.gameprop.BoardProp.MagicHouse;
+import model.gameprop.GameInProcess;
+import model.gameprop.Player;
+import model.gameprop.gamemodel.Game;
+
+public class FieldCardObserver extends ExistenceObserver{
+    protected MagicCard observedFieldCard;
+    protected Action toRevertAction;
+
+    public FieldCardObserver(Card observedCard, Player ownerOfCard) {
+        super(observedCard, ownerOfCard);
+        setObservedFieldCard((MagicCard) observedCard);
+    }
+
+    public void setObservedFieldCard(MagicCard observedFieldCard) {
+        this.observedFieldCard = observedFieldCard;
+    }
+
+    public void setToRevertAction(Action toRevertAction) {
+        this.toRevertAction = toRevertAction;
+    }
+
+    @Override
+    public void update() {
+        if (!this.exists()) {
+            revertActionAsFinalize();
+            existenceObservers.remove(this);
+        } else {
+            performActionForNewCards();
+        }
+    }
+
+    @Override
+    public boolean exists() {
+        Game game = GameInProcess.getGame();
+        Player current = game.getPlayer(SideOfFeature.CURRENT);
+        Player opponent = game.getPlayer(SideOfFeature.OPPONENT);
+
+        MagicHouse fieldHouseCurr = current.getBoard().getFieldHouse();
+        MagicHouse fieldHouseOppo = opponent.getBoard().getFieldHouse();
+
+        boolean isObservedCardInCurrFieldHouse = fieldHouseCurr.getMagicCard().equals(observedCard);
+        boolean isObservedCardInOppoFieldHouse = fieldHouseOppo.getMagicCard().equals(observedCard);
+        if (isObservedCardInCurrFieldHouse || isObservedCardInOppoFieldHouse) {
+            return true;
+        }
+        return false;
+    }
+
+    private void performActionForNewCards() {
+        if (toRevertAction instanceof ChangingMonsterDefenceAction) {
+            ChangingMonsterDefenceAction action = (ChangingMonsterDefenceAction) toRevertAction;
+            action.change(action.getFinalChangeValue(), action.getChangeWhichTeamMonsterDefence(), action.getTypesToChangeDefence(), ownerOfCard, "Defence");
+        } else if (toRevertAction instanceof ChangingMonsterAttackAction) {
+            ChangingMonsterAttackAction action = (ChangingMonsterAttackAction) toRevertAction;
+            action.change(action.getFinalChangeValue(), action.getChangeWhichTeamMonsterAttack(), action.getTypesToChangeAttack(), ownerOfCard, "Attack");
+        } else if (toRevertAction instanceof ChangingMonsterAttackWithGraveyardsMonster) {
+            ChangingMonsterAttackWithGraveyardsMonster action = (ChangingMonsterAttackWithGraveyardsMonster) toRevertAction;
+            action.change(action.getFinalChangeValue(), action.getChangeWhichTeamMonstersAttack(), action.getTypesToChangeAttack(), ownerOfCard, "Attack");
+        } // else: impossible :)
+    }
+
+    private void revertActionAsFinalize() {
+        if (toRevertAction instanceof ChangingMonsterDefenceAction) {
+            ChangingMonsterDefenceAction action = (ChangingMonsterDefenceAction) toRevertAction;
+            action.revertChange(action.getChangeWhichTeamMonsterDefence(), action.getFinalChangeValue() * (-1), "Defence");
+        } else if (toRevertAction instanceof ChangingMonsterAttackAction) {
+            ChangingMonsterAttackAction action = (ChangingMonsterAttackAction) toRevertAction;
+            action.revertChange(action.getChangeWhichTeamMonsterAttack(), action.getFinalChangeValue() * (-1), "Attack");
+        } else if (toRevertAction instanceof ChangingMonsterAttackWithGraveyardsMonster) {
+            ChangingMonsterAttackWithGraveyardsMonster action = (ChangingMonsterAttackWithGraveyardsMonster) toRevertAction;
+            action.revertChange(action.getChangeWhichTeamMonstersAttack(), action.getFinalChangeValue() * (-1), "Attack");
+        } // else: impossible :)
+    }
+}
Index: src/main/java/model/gameprop/BoardProp/PlayerBoard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.gameprop.BoardProp;\r\n\r\nimport exceptions.CardNotFoundException;\r\nimport model.cards.cardsProp.Card;\r\nimport model.cards.cardsProp.MagicCard;\r\nimport model.cards.cardsProp.MonsterCard;\r\nimport model.enums.GameEnums.CardLocation;\r\nimport model.enums.GameEnums.cardvisibility.MagicHouseVisibilityState;\r\nimport model.enums.GameEnums.cardvisibility.MonsterHouseVisibilityState;\r\nimport model.userProp.Deck;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class PlayerBoard {\r\n    MagicHouse[] magicHouse;\r\n    MonsterHouse[] monsterHouse;\r\n    MagicHouse field;\r\n    ArrayList<Card> playerHand;\r\n    GraveYard graveYard;\r\n\r\n    {\r\n        initializeBoardHouses();\r\n        playerHand = new ArrayList<>();\r\n        graveYard = new GraveYard();\r\n    }\r\n\r\n    public MagicHouse[] getMagicHouse() {\r\n        return magicHouse;\r\n    }\r\n\r\n    public MonsterHouse[] getMonsterHouse() {\r\n        return monsterHouse;\r\n    }\r\n\r\n    public ArrayList<Card> getPlayerHand() {\r\n        return playerHand;\r\n    }\r\n\r\n    public GraveYard getGraveYard() {\r\n        return graveYard;\r\n    }\r\n\r\n    private void initializeBoardHouses() {\r\n        monsterHouse = new MonsterHouse[5];\r\n        for (int i = 0; i < monsterHouse.length; i++) {\r\n            monsterHouse[i] = new MonsterHouse();\r\n        }\r\n        magicHouse = new MagicHouse[5];\r\n        for (int i = 0; i < magicHouse.length; i++) {\r\n            magicHouse[i] = new MagicHouse();\r\n        }\r\n        field = new MagicHouse();\r\n    }\r\n\r\n    public MagicHouse getFieldHouse() {\r\n        return field;\r\n    }\r\n\r\n    public Card getCard(Integer address, CardLocation location) {\r\n        switch (location) {\r\n            case PLAYER_HAND:\r\n                return playerHand.get(address);\r\n            case FIELD_ZONE:\r\n                return field.getMagicCard();\r\n            case SPELL_ZONE:\r\n                return magicHouse[address].getMagicCard();\r\n            case MONSTER_ZONE:\r\n                return monsterHouse[address].getMonsterCard();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    public void moveCardToGraveYard( int address , CardLocation location){\r\n        if (location.equals(CardLocation.MONSTER_ZONE)){\r\n            Card card =  monsterHouse[address].getMonsterCard();\r\n            monsterHouse[address].setMonsterCard(null);\r\n            graveYard.addCardToGraveYard(card);\r\n        }\r\n    }\r\n\r\n    public int numberOfFullHouse(String typeOfHouse){\r\n        int counter = 0;\r\n        if (typeOfHouse.equals(\"monster\")){\r\n            for (MonsterHouse house : monsterHouse) {\r\n                if (!house.getState().equals(MonsterHouseVisibilityState.E)){\r\n                    counter++;\r\n                }\r\n            }\r\n        }else{\r\n            for (MagicHouse house : magicHouse) {\r\n                if (!house.getState().equals(MagicHouseVisibilityState.E)){\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n        return counter;\r\n    }\r\n\r\n    public void summonMonster(MonsterCard monsterCard) {\r\n        for (MonsterHouse house : monsterHouse) {\r\n            if (house.getMonsterCard() == null) {\r\n                house.setMonsterCard(monsterCard);\r\n                house.setState(MonsterHouseVisibilityState.OO);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public MagicCard getMagicCardByName(String name) throws CardNotFoundException {\r\n        for (MagicHouse house : magicHouse) {\r\n            if (house.getMagicCard().getName().equals(name)) {\r\n                return house.getMagicCard();\r\n            }\r\n        }\r\n        throw new CardNotFoundException(\"magic card not found!\");\r\n    }\r\n\r\n    public MonsterCard getMonsterCardByName(String name) throws CardNotFoundException {\r\n        for (MonsterHouse house : monsterHouse) {\r\n            if (house.getMonsterCard().getName().equals(name)) {\r\n                return house.getMonsterCard();\r\n            }\r\n        }\r\n        throw new CardNotFoundException(\"monster card not found!\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/gameprop/BoardProp/PlayerBoard.java b/src/main/java/model/gameprop/BoardProp/PlayerBoard.java
--- a/src/main/java/model/gameprop/BoardProp/PlayerBoard.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/gameprop/BoardProp/PlayerBoard.java	(date 1622144915454)
@@ -76,6 +76,22 @@
             Card card =  monsterHouse[address].getMonsterCard();
             monsterHouse[address].setMonsterCard(null);
             graveYard.addCardToGraveYard(card);
+        } else if (location.equals(CardLocation.SPELL_ZONE)) {
+            Card card = magicHouse[address].getMagicCard();
+            magicHouse[address].setMagicCard(null);
+            graveYard.addCardToGraveYard(card);
+        }
+    }
+
+    public void moveCardToGraveYard(Card card) {
+        if (card instanceof MonsterCard) {
+            MonsterHouse monsterHouse = MonsterHouse.getMonsterHouseByMonsterCard((MonsterCard) card);
+            monsterHouse.setMonsterCard(null);
+            graveYard.addCardToGraveYard(card);
+        } else if (card instanceof MagicCard) {
+            MagicHouse magicHouse = MagicHouse.getMagicHouseByMagicCard((MagicCard) card);
+            magicHouse.setMagicCard(null);
+            graveYard.addCardToGraveYard(card);
         }
     }
 
Index: src/main/java/model/gameprop/BoardProp/MagicHouse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.gameprop.BoardProp;\r\n\r\nimport model.cards.cardsProp.MagicCard;\r\nimport model.enums.GameEnums.cardvisibility.MagicHouseVisibilityState;\r\n\r\npublic class MagicHouse extends GameHouse {\r\n    MagicCard magicCard;\r\n    MagicHouseVisibilityState state;\r\n\r\n    {\r\n        changePos = false;\r\n        magicCard = null;\r\n        state = MagicHouseVisibilityState.E;\r\n    }\r\n\r\n    public void setMagicCard(MagicCard magicCard) {\r\n        this.magicCard = magicCard;\r\n    }\r\n\r\n    public MagicHouseVisibilityState getState() {\r\n        return state;\r\n    }\r\n\r\n    public void setState(MagicHouseVisibilityState state) {\r\n        this.state = state;\r\n    }\r\n\r\n    public MagicCard getMagicCard() {\r\n        return magicCard;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/gameprop/BoardProp/MagicHouse.java b/src/main/java/model/gameprop/BoardProp/MagicHouse.java
--- a/src/main/java/model/gameprop/BoardProp/MagicHouse.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/gameprop/BoardProp/MagicHouse.java	(date 1622144915437)
@@ -1,7 +1,13 @@
 package model.gameprop.BoardProp;
 
 import model.cards.cardsProp.MagicCard;
+import model.enums.GameEnums.SideOfFeature;
 import model.enums.GameEnums.cardvisibility.MagicHouseVisibilityState;
+import model.gameprop.GameInProcess;
+import model.gameprop.Player;
+import model.gameprop.gamemodel.Game;
+
+import java.util.ArrayList;
 
 public class MagicHouse extends GameHouse {
     MagicCard magicCard;
@@ -29,5 +35,24 @@
         return magicCard;
     }
 
+    public static MagicHouse getMagicHouseByMagicCard(MagicCard magicCard) {
+        Game game = GameInProcess.getGame();
+
+        ArrayList<SideOfFeature> sides = new ArrayList<>();
+        sides.add(SideOfFeature.CURRENT); sides.add(SideOfFeature.OPPONENT);
+
+        for (SideOfFeature side : sides) {
+            Player player = game.getPlayer(side);
+            MagicHouse[] magicHouses = player.getBoard().getMagicHouse();
+
+            for (MagicHouse magicHouse : magicHouses) {
+                if (magicHouse.getMagicCard().equals(magicCard)) {
+                    return magicHouse;
+                }
+            }
+        }
+        return null;
+    }
+
 
 }
Index: src/main/java/model/enums/GameEnums/RequestingInput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.enums.GameEnums;\r\n\r\npublic enum RequestingInput {\r\n    FROM_GRAVEYARD(\"Enter the name of card you want to summon from graveyard\"),\r\n    GUESS_CARD(\"Declare a card name:\"),\r\n    CHOOSE_FIELD_CARD(\"Declare a field card:\"),\r\n    CHOOSE_FROM_OPPO_MONSTER_HOUSES(\"Declare one of your opponents monsters:\"),\r\n    MAGIC_CARD_TO_DESTROY(\"Declare a magic card to destroy:\"),\r\n    SET_EQUIPED_MONSTER(\"Declare a monster card you want to equip:\");\r\n\r\n    private final String message;\r\n\r\n    RequestingInput(String message) {\r\n        this.message = message;\r\n    }\r\n\r\n\r\n    public String toString() {\r\n        return message;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/enums/GameEnums/RequestingInput.java b/src/main/java/model/enums/GameEnums/RequestingInput.java
--- a/src/main/java/model/enums/GameEnums/RequestingInput.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/enums/GameEnums/RequestingInput.java	(date 1622139244486)
@@ -6,7 +6,8 @@
     CHOOSE_FIELD_CARD("Declare a field card:"),
     CHOOSE_FROM_OPPO_MONSTER_HOUSES("Declare one of your opponents monsters:"),
     MAGIC_CARD_TO_DESTROY("Declare a magic card to destroy:"),
-    SET_EQUIPED_MONSTER("Declare a monster card you want to equip:");
+    SET_EQUIPED_MONSTER("Declare a monster card you want to equip:"),
+    ERROR_OF_INVALID_MONSTER_CARD_EQUIPPED("Invalid Monster! Press Enter to retry");
 
     private final String message;
 
Index: src/main/java/model/gameprop/BoardProp/MonsterHouse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.gameprop.BoardProp;\r\n\r\nimport model.cards.cardsProp.MonsterCard;\r\nimport model.enums.GameEnums.cardvisibility.MonsterHouseVisibilityState;\r\n\r\npublic class MonsterHouse extends GameHouse {\r\n    MonsterCard monsterCard;\r\n    MonsterHouseVisibilityState state;\r\n    private boolean isMonsterAttacked;\r\n\r\n    {\r\n        isMonsterAttacked = false;\r\n        changePos = false;\r\n        monsterCard = null;\r\n        state = MonsterHouseVisibilityState.E;\r\n    }\r\n\r\n    public MonsterHouseVisibilityState getState() {\r\n        return state;\r\n    }\r\n\r\n    public void setState(MonsterHouseVisibilityState state) {\r\n        this.state = state;\r\n    }\r\n\r\n    public MonsterCard getMonsterCard() {\r\n        return monsterCard;\r\n    }\r\n\r\n    public void setMonsterCard(MonsterCard monsterCard) {\r\n        this.monsterCard = monsterCard;\r\n        if (this.monsterCard == null) {\r\n            state = MonsterHouseVisibilityState.E;\r\n            isMonsterAttacked = false;\r\n        }\r\n    }\r\n\r\n    public boolean isPosChange() {\r\n        return changePos;\r\n    }\r\n\r\n    public void changePos() {\r\n        changePos = true;\r\n    }\r\n\r\n    public boolean isMonsterAttacked() {\r\n        return isMonsterAttacked;\r\n    }\r\n\r\n    public void setMonsterAttacked() {\r\n        isMonsterAttacked = true;\r\n    }\r\n}\r\n//TODO game map and where to add it
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/gameprop/BoardProp/MonsterHouse.java b/src/main/java/model/gameprop/BoardProp/MonsterHouse.java
--- a/src/main/java/model/gameprop/BoardProp/MonsterHouse.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/gameprop/BoardProp/MonsterHouse.java	(date 1622144915461)
@@ -1,16 +1,26 @@
 package model.gameprop.BoardProp;
 
 import model.cards.cardsProp.MonsterCard;
+import model.enums.GameEnums.SideOfFeature;
 import model.enums.GameEnums.cardvisibility.MonsterHouseVisibilityState;
+import model.gameprop.GameInProcess;
+import model.gameprop.Player;
+import model.gameprop.gamemodel.Game;
+
+import java.util.ArrayList;
 
 public class MonsterHouse extends GameHouse {
     MonsterCard monsterCard;
     MonsterHouseVisibilityState state;
     private boolean isMonsterAttacked;
+    private int practicalAttack;
+    private int practicalDefence;
+    private boolean haveBeenImpactedByField;
 
     {
         isMonsterAttacked = false;
         changePos = false;
+        haveBeenImpactedByField = false;
         monsterCard = null;
         state = MonsterHouseVisibilityState.E;
     }
@@ -32,8 +42,39 @@
         if (this.monsterCard == null) {
             state = MonsterHouseVisibilityState.E;
             isMonsterAttacked = false;
+            haveBeenImpactedByField = false;
+            practicalAttack = 0;
+            practicalDefence = 0;
+        } else {
+            practicalAttack = monsterCard.getAttack();
+            practicalDefence = monsterCard.getDefence();
+
         }
     }
+
+    public int getPracticalAttack() {
+        return practicalAttack;
+    }
+
+    public void setPracticalAttack(int practicalAttack) {
+        this.practicalAttack = practicalAttack;
+    }
+
+    public int getPracticalDefence() {
+        return practicalDefence;
+    }
+
+    public void setPracticalDefence(int practicalDefence) {
+        this.practicalDefence = practicalDefence;
+    }
+
+    public boolean getHaveBeenImpactedByField() {
+        return haveBeenImpactedByField;
+    }
+
+    public void setHaveBeenImpactedByField(boolean haveBeenImpactedByField) {
+        this.haveBeenImpactedByField = haveBeenImpactedByField;
+    }
 
     public boolean isPosChange() {
         return changePos;
@@ -50,5 +91,24 @@
     public void setMonsterAttacked() {
         isMonsterAttacked = true;
     }
+
+    public static MonsterHouse getMonsterHouseByMonsterCard(MonsterCard monsterCard) {
+        Game game = GameInProcess.getGame();
+
+        ArrayList<SideOfFeature> sides = new ArrayList<>();
+        sides.add(SideOfFeature.CURRENT); sides.add(SideOfFeature.OPPONENT);
+
+        for (SideOfFeature side : sides) {
+            Player player = game.getPlayer(side);
+            MonsterHouse[] monsterHouses = player.getBoard().getMonsterHouse();
+
+            for (MonsterHouse monsterHouse : monsterHouses) {
+                if (monsterHouse.getMonsterCard().equals(monsterCard)) {
+                    return monsterHouse;
+                }
+            }
+        }
+        return null;
+    }
 }
 //TODO game map and where to add it
\ No newline at end of file
Index: src/main/java/controller/gamecontrollers/gamestagecontroller/DrawPhaseController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.gamecontrollers.gamestagecontroller;\r\n\r\nimport controller.gamecontrollers.GeneralController;\r\nimport model.cards.cardsProp.Card;\r\nimport model.enums.GameEnums.GamePhaseEnums.DrawPhase;\r\nimport model.enums.GameEnums.SideOfFeature;\r\nimport model.gameprop.gamemodel.Game;\r\nimport model.gameprop.GameInProcess;\r\nimport model.gameprop.Player;\r\nimport model.userProp.Deck;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class DrawPhaseController extends GeneralController {\r\n\r\n   private static DrawPhaseController instance ;\r\n\r\n   private DrawPhaseController(){\r\n   }\r\n\r\n    public static DrawPhaseController getInstance() {\r\n        if (instance == null) instance = new DrawPhaseController();\r\n        return instance;\r\n    }\r\n\r\n    public String draw() {\r\n        Game game = GameInProcess.getGame();\r\n        Player player = game.getPlayer(SideOfFeature.CURRENT);\r\n        ArrayList<Card> hand = player.getBoard().getPlayerHand();\r\n        if (!game.isPlayerDrawInThisTurn()) {\r\n            if (hand.size() < 6) {\r\n                Deck playerDeck = player.getDeck();\r\n                Card newCard = playerDeck.getMainDeck().get(0);\r\n                playerDeck.removeCardFromMainDeck(newCard);\r\n                game.setPlayerDrawInTurn();\r\n                game.getPlayer(SideOfFeature.CURRENT).getBoard().getPlayerHand().add(newCard);\r\n               return process(DrawPhase.ADD_NEW_CARD.toString(), newCard.getName());\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public String process(String message , String name){\r\n        if (message.contains(\"_CN_\")){\r\n            message = message.replace(\"_CN_\", name);\r\n        }\r\n        return message;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controller/gamecontrollers/gamestagecontroller/DrawPhaseController.java b/src/main/java/controller/gamecontrollers/gamestagecontroller/DrawPhaseController.java
--- a/src/main/java/controller/gamecontrollers/gamestagecontroller/DrawPhaseController.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/controller/gamecontrollers/gamestagecontroller/DrawPhaseController.java	(date 1621263370987)
@@ -27,7 +27,7 @@
         Game game = GameInProcess.getGame();
         Player player = game.getPlayer(SideOfFeature.CURRENT);
         ArrayList<Card> hand = player.getBoard().getPlayerHand();
-        if (!game.isPlayerDrawInThisTurn()) {
+        if (!game.isPlayerDrawInThisTurn() && player.isAllowedToDraw) {
             if (hand.size() < 6) {
                 Deck playerDeck = player.getDeck();
                 Card newCard = playerDeck.getMainDeck().get(0);
Index: src/main/java/model/gameprop/turnBasedObserver/ChangeTeamForOneTurn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.gameprop.turnBasedObserver;\r\n\r\nimport model.cards.cardsProp.Card;\r\nimport model.cards.cardsProp.MonsterCard;\r\nimport model.gameprop.BoardProp.MonsterHouse;\r\nimport model.gameprop.Player;\r\n\r\n\r\npublic class ChangeTeamForOneTurn extends TurnObserver{\r\n    Card card;\r\n    Player actionActivator;\r\n    Player opponent;\r\n\r\n    public ChangeTeamForOneTurn(Card card, Player actionActivator, Player opponent) {\r\n        super();\r\n        setActionActivator(actionActivator);\r\n        setCard(card);\r\n        setOpponent(opponent);\r\n        this.remainedTurns = 1;\r\n    }\r\n\r\n    public void setActionActivator(Player actionActivator) {\r\n        this.actionActivator = actionActivator;\r\n    }\r\n\r\n    public void setCard(Card card) {\r\n        this.card = card;\r\n    }\r\n\r\n    public void setOpponent(Player opponent) {\r\n        this.opponent = opponent;\r\n    }\r\n\r\n    @Override\r\n    public void update() {\r\n        super.update();\r\n        if (remainedTurns == 0) {\r\n            MonsterHouse[] oppoMonsterHouses = opponent.getBoard().getMonsterHouse();\r\n            MonsterHouse[] activatorMonsterHouses = actionActivator.getBoard().getMonsterHouse();\r\n\r\n            for (MonsterHouse iterator : activatorMonsterHouses) { // deleting card from Effect Activators MonsterHouse\r\n                if (iterator.getMonsterCard().equals(this.card)) { // identifying the occupied monsterHouse\r\n                    iterator.setMonsterCard(null);\r\n                }\r\n            }\r\n\r\n            for (MonsterHouse iterator : oppoMonsterHouses) {\r\n                if (iterator.getMonsterCard() == null) { // empty monster house...\r\n                    iterator.setMonsterCard(((MonsterCard) this.card));\r\n                }\r\n            }\r\n\r\n            turnObservers.remove(this); // observation finished successfully!\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/gameprop/turnBasedObserver/ChangeTeamForOneTurn.java b/src/main/java/model/gameprop/turnBasedObserver/ChangeTeamForOneTurn.java
--- a/src/main/java/model/gameprop/turnBasedObserver/ChangeTeamForOneTurn.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/gameprop/turnBasedObserver/ChangeTeamForOneTurn.java	(date 1621263370979)
@@ -13,9 +13,9 @@
 
     public ChangeTeamForOneTurn(Card card, Player actionActivator, Player opponent) {
         super();
-        setActionActivator(actionActivator);
-        setCard(card);
-        setOpponent(opponent);
+        this.setActionActivator(actionActivator);
+        this.setCard(card);
+        this.setOpponent(opponent);
         this.remainedTurns = 1;
     }
 
Index: src/main/java/model/gameprop/turnBasedObserver/AvoidDrawingForSomeTurnsObserver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/gameprop/turnBasedObserver/AvoidDrawingForSomeTurnsObserver.java b/src/main/java/model/gameprop/turnBasedObserver/AvoidDrawingForSomeTurnsObserver.java
new file mode 100644
--- /dev/null	(date 1621263370800)
+++ b/src/main/java/model/gameprop/turnBasedObserver/AvoidDrawingForSomeTurnsObserver.java	(date 1621263370800)
@@ -0,0 +1,28 @@
+package model.gameprop.turnBasedObserver;
+
+import model.gameprop.Player;
+
+public class AvoidDrawingForSomeTurnsObserver extends TurnObserver{
+
+    private Player player;
+
+    public AvoidDrawingForSomeTurnsObserver(int numOfTurns, Player player) {
+        super();
+        this.remainedTurns = numOfTurns;
+        this.setPlayer(player);
+    }
+
+    @Override
+    public void update() {
+        super.update();
+        if (remainedTurns == 0) { // finalize of this observer!
+            player.isAllowedToDraw = true;
+
+            turnObservers.remove(this); // observation done successfully!
+        }
+    }
+
+    public void setPlayer(Player player) {
+        this.player = player;
+    }
+}
Index: src/main/java/model/cards/cardsActions/magicActionChildren/AvoidOpponentsCardDraw.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.cards.cardsActions.magicActionChildren;\r\n\r\nimport model.cards.cardsActions.Action;\r\n\r\npublic class AvoidOpponentsCardDraw extends Action {\r\n    {\r\n        name = this.getClass().getSimpleName();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidOpponentsCardDraw.java b/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidOpponentsCardDraw.java
--- a/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidOpponentsCardDraw.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidOpponentsCardDraw.java	(date 1621263564058)
@@ -1,9 +1,32 @@
 package model.cards.cardsActions.magicActionChildren;
 
 import model.cards.cardsActions.Action;
+import model.enums.GameEnums.SideOfFeature;
+import model.gameprop.Player;
+import model.gameprop.gamemodel.Game;
+import model.gameprop.turnBasedObserver.AvoidDrawingForSomeTurnsObserver;
 
 public class AvoidOpponentsCardDraw extends Action {
+    private int numOfTurns;
+
+    public AvoidOpponentsCardDraw(int numOfTurns) {
+        this.setNumOfTurns(numOfTurns);
+    }
+
     {
         name = this.getClass().getSimpleName();
     }
+
+    public void setNumOfTurns(int numOfTurns) {
+        this.numOfTurns = numOfTurns;
+    }
+
+    @Override
+    public void active(Game game) {
+        Player opponent = game.getPlayer(SideOfFeature.OPPONENT);
+
+        opponent.isAllowedToDraw = false;
+
+        new AvoidDrawingForSomeTurnsObserver(numOfTurns, opponent); // let the game watch it!
+    }
 }
Index: src/main/java/model/cards/cardsActions/monsterActionChildren/DestroyTheAttackerMonsterOfOpponent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/monsterActionChildren/DestroyTheAttackerMonsterOfOpponent.java b/src/main/java/model/cards/cardsActions/monsterActionChildren/DestroyTheAttackerMonsterOfOpponent.java
new file mode 100644
--- /dev/null	(date 1621268521025)
+++ b/src/main/java/model/cards/cardsActions/monsterActionChildren/DestroyTheAttackerMonsterOfOpponent.java	(date 1621268521025)
@@ -0,0 +1,34 @@
+package model.cards.cardsActions.monsterActionChildren;
+
+import model.cards.cardsActions.Action;
+import model.cards.cardsProp.MonsterCard;
+import model.enums.GameEnums.SideOfFeature;
+import model.gameprop.BoardProp.MonsterHouse;
+import model.gameprop.Player;
+import model.gameprop.gamemodel.Game;
+
+public class DestroyTheAttackerMonsterOfOpponent extends Action {
+
+    {
+        name = this.getClass().getName();
+    }
+
+    public DestroyTheAttackerMonsterOfOpponent() {
+
+    }
+
+    @Override
+    public void active(Game game) {
+        MonsterCard attacker = (MonsterCard) game.getCardProp().getCard();
+        Player opponent = game.getPlayer(SideOfFeature.OPPONENT);
+        MonsterHouse[] monsterHouses = opponent.getBoard().getMonsterHouse();
+
+        for (MonsterHouse monsterHouse : monsterHouses) {
+            MonsterCard monsterCard = monsterHouse.getMonsterCard();
+            if (monsterCard != null) {
+                opponent.getBoard().getGraveYard().addCardToGraveYard(monsterCard);
+                monsterHouse.setMonsterCard(null);
+            }
+        }
+    }
+}
Index: src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomethingByFieldCard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomethingByFieldCard.java b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomethingByFieldCard.java
new file mode 100644
--- /dev/null	(date 1622134183117)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomethingByFieldCard.java	(date 1622134183117)
@@ -0,0 +1,65 @@
+package model.cards.cardsActions.magicActionChildren;
+
+import model.cards.cardsProp.MagicCard;
+import model.cards.cardsProp.MonsterCard;
+import model.enums.GameEnums.SideOfFeature;
+import model.gameprop.BoardProp.MonsterHouse;
+import model.gameprop.GameInProcess;
+import model.gameprop.Player;
+import model.gameprop.existenceBasedObserver.FieldCardObserver;
+import model.gameprop.gamemodel.Game;
+
+import java.util.ArrayList;
+
+public interface ChangingSomethingByFieldCard {
+    default void change(int change, ArrayList<SideOfFeature> changeWhichTeamMonsterPower,
+                        ArrayList<String> typesToChangePower, Player ownerOfCard, String whichPower) {
+
+        Game game = GameInProcess.getGame();
+
+        for (SideOfFeature sideOfFeature : changeWhichTeamMonsterPower) {
+            MonsterHouse[] monsterHouses = game.getPlayer(sideOfFeature).getBoard().getMonsterHouse();
+
+            for (MonsterHouse monsterHouse : monsterHouses) {
+                if (typesToChangePower.contains(monsterHouse.getMonsterCard().getRace().toString())) {
+
+                    MonsterCard monsterCard = monsterHouse.getMonsterCard();
+
+                    if (whichPower.equals("Attack")) {
+                        monsterCard.setAttack(monsterCard.getAttack() + change);
+                    } else if (whichPower.equals("Defence")) {
+                        monsterCard.setDefence(monsterCard.getDefence() + change);
+                    }
+
+                    monsterHouse.setHaveBeenImpactedByField(true);
+                    // Finished the job! Let's go home... Wait!NO! It continues...
+                }
+            }
+        }
+
+        MagicCard fieldCardOfPlayer = ownerOfCard.getBoard().getFieldHouse().getMagicCard();
+        new FieldCardObserver(fieldCardOfPlayer, ownerOfCard); // Let the game observe this field card!
+
+    }
+
+    default void revertChange(ArrayList<SideOfFeature> playersToRevert, int revertValue, String whichPower) {
+        Game game = GameInProcess.getGame();
+
+        for (SideOfFeature sideOfFeature : playersToRevert) {
+            MonsterHouse[] monsterHouses = game.getPlayer(sideOfFeature).getBoard().getMonsterHouse();
+
+            for (MonsterHouse monsterHouse : monsterHouses) {
+                if (monsterHouse.getHaveBeenImpactedByField()) { // it should be reverted!
+                    if (whichPower.equals("Defence")) {
+                        monsterHouse.setPracticalDefence(monsterHouse.getPracticalDefence() + revertValue);
+                    } else if (whichPower.equals("Attack")) {
+                        monsterHouse.setPracticalAttack(monsterHouse.getPracticalAttack() + revertValue);
+                    }
+
+                }
+
+            }
+        }
+
+    }
+}
Index: src/main/java/model/cards/cardsActions/monsterActionChildren/DestroyOneOpponentMonster.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/monsterActionChildren/DestroyOneOpponentMonster.java b/src/main/java/model/cards/cardsActions/monsterActionChildren/DestroyOneOpponentMonster.java
new file mode 100644
--- /dev/null	(date 1621968490212)
+++ b/src/main/java/model/cards/cardsActions/monsterActionChildren/DestroyOneOpponentMonster.java	(date 1621968490212)
@@ -0,0 +1,36 @@
+package model.cards.cardsActions.monsterActionChildren;
+
+import controller.gamecontrollers.GetStringInputFromView;
+import exceptions.CardNotFoundException;
+import model.cards.cardsActions.Action;
+import model.cards.cardsProp.MonsterCard;
+import model.enums.GameEnums.RequestingInput;
+import model.enums.GameEnums.SideOfFeature;
+import model.gameprop.BoardProp.MonsterHouse;
+import model.gameprop.Player;
+import model.gameprop.gamemodel.Game;
+
+public class DestroyOneOpponentMonster extends Action {
+    {
+        name = this.getClass().getSimpleName();
+    }
+
+    @Override
+    public void active(Game game) {
+        String nameOfTargetMonster = GetStringInputFromView.getInputFromView(RequestingInput.CHOOSE_FROM_OPPO_MONSTER_HOUSES);
+        Player opponent = game.getPlayer(SideOfFeature.OPPONENT);
+        MonsterHouse[] monsterHouses = opponent.getBoard().getMonsterHouse();
+
+        for (MonsterHouse monsterHouse : monsterHouses) {
+            MonsterCard monsterCard = monsterHouse.getMonsterCard();
+            if (monsterCard != null) { // checking emptiness of a house!
+                if (monsterCard.getName().equals(nameOfTargetMonster)) { // detected the target!
+                    opponent.getBoard().getGraveYard().addCardToGraveYard(monsterCard); // send target to graveyard
+                    monsterHouse.setMonsterCard(null); // make empty
+                    break;
+                }
+            }
+        }
+        isActivatedBefore = true;
+    }
+}
Index: src/main/java/model/cards/cardsActions/magicActionChildren/TerraformingAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.cards.cardsActions.magicActionChildren;\r\n\r\nimport model.cards.cardsActions.Action;\r\nimport model.cards.cardsEnum.Magic.MagicAttribute;\r\nimport model.cards.cardsProp.Card;\r\nimport model.cards.cardsProp.MagicCard;\r\nimport model.enums.GameEnums.RequestingInput;\r\nimport model.enums.GameEnums.SideOfFeature;\r\nimport model.gameprop.GameInProcess;\r\nimport model.gameprop.Player;\r\nimport model.gameprop.gamemodel.Game;\r\nimport viewer.game.GetStringInput;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class TerraformingAction extends Action {\r\n\r\n    {\r\n        name = this.getClass().getSimpleName();\r\n    }\r\n\r\n    @Override\r\n    public void active(Game game) {\r\n        Player player = game.getPlayer(SideOfFeature.CURRENT);\r\n        ArrayList<Card> mainDeck = player.getDeck().getMainDeck();\r\n        ArrayList<Card> toShowCards = new ArrayList<>();\r\n\r\n        ArrayList<Card> hand = player.getBoard().getPlayerHand();\r\n        if (hand.size() <= 6){\r\n            for (Card card : mainDeck) { // seeking \"FIELD\" spells in deck...\r\n                if (card instanceof MagicCard) {\r\n                    if (((MagicCard) card).getMagicAttribute() == MagicAttribute.FIELD) {\r\n                        toShowCards.add(card);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // TODO: showing cards to player in CLI!!!\r\n\r\n            String selectedName = \"\";\r\n            while (selectedName.length() == 0) { // I/O dialog...\r\n                selectedName = GetStringInput.getInput(RequestingInput.CHOOSE_FIELD_CARD); // INCOMPLETE output!\r\n            }\r\n\r\n            for (Card card : mainDeck) { // actual process of Action...\r\n                if (card.getName().equals(selectedName)) {\r\n                    GameInProcess.getGame().moveCardFromHandToDeck(card);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/TerraformingAction.java b/src/main/java/model/cards/cardsActions/magicActionChildren/TerraformingAction.java
--- a/src/main/java/model/cards/cardsActions/magicActionChildren/TerraformingAction.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/TerraformingAction.java	(date 1621262665792)
@@ -26,7 +26,7 @@
         ArrayList<Card> toShowCards = new ArrayList<>();
 
         ArrayList<Card> hand = player.getBoard().getPlayerHand();
-        if (hand.size() <= 6){
+        if (hand.size() <= 6) {
             for (Card card : mainDeck) { // seeking "FIELD" spells in deck...
                 if (card instanceof MagicCard) {
                     if (((MagicCard) card).getMagicAttribute() == MagicAttribute.FIELD) {
Index: src/main/java/model/cards/cardsProp/MagicCard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.cards.cardsProp;\r\n\r\nimport model.cards.cardsActions.Action;\r\nimport model.cards.cardsActions.magicActionChildren.*;\r\nimport model.cards.cardsEnum.Magic.MagicAttribute;\r\nimport model.cards.cardsEnum.Magic.MagicSpeed;\r\nimport model.cards.cardsEnum.Magic.MagicType;\r\nimport model.cards.cardsEnum.Monster.MonsterRace;\r\nimport model.enums.GameEnums.SideOfFeature;\r\nimport model.events.Event;\r\nimport model.events.eventChildren.FieldMagicFaceUp;\r\nimport model.events.eventChildren.ManuallyActivation;\r\nimport model.events.eventChildren.CurrentMonsterWantsToAttack;\r\nimport model.events.eventChildren.SummonMonster;\r\nimport model.gameprop.gamemodel.Game;\r\n\r\nimport java.util.ArrayList;\r\n\r\n\r\npublic class MagicCard extends Card {\r\n    private static ArrayList<MagicCard> magicCards;\r\n\r\n    static {\r\n        magicCards = new ArrayList<>();\r\n    }\r\n\r\n    private final ArrayList<Action> actionsOfMagic;\r\n    private final ArrayList<Event> sideEvents;\r\n    private final ArrayList<Event> triggers;\r\n    private MagicSpeed magicSpeed;\r\n    private MagicAttribute magicAttribute;\r\n    private MagicType typeOfMagic;\r\n\r\n    {\r\n        actionsOfMagic = new ArrayList<>();\r\n        sideEvents = new ArrayList<>();\r\n        triggers = new ArrayList<>();\r\n    }\r\n\r\n    public MagicCard(String name, String typeOfMagic, String magicAttribute, String description, String speed, String price) {\r\n        super(name, description, price);\r\n        setTypeOfMagic(MagicType.setType(typeOfMagic));\r\n        setMagicAttribute(MagicAttribute.setAttribute(magicAttribute));\r\n        setMagicSpeed(MagicSpeed.setSpeed(speed));\r\n        magicCards.add(this);\r\n        setMagicEffectAndEvents(name);\r\n    }\r\n\r\n    private void setMagicEffectAndEvents(String name) {\r\n        if (name.equals(\"Monster Reborn\")) {\r\n            actionsOfMagic.add(new SummonMonsterFromBothGraveYardsAction());\r\n            triggers.add(ManuallyActivation.getInstance());\r\n        }\r\n        if (name.equals(\"Torrential Tribute\")) {\r\n            ArrayList<MonsterCard> monsterCards = new ArrayList<>();\r\n            ArrayList<MagicCard> magicCards = new ArrayList<>();\r\n            triggers.add(ManuallyActivation.getInstance());\r\n        }\r\n        if (name.equals(\"Raigeki\")) {\r\n            actionsOfMagic.add(new DestroyAllOpponentMonsters());\r\n            triggers.add(ManuallyActivation.getInstance());\r\n        }\r\n        if (name.equals(\"Harpie’s Feather Duster\")) {\r\n            actionsOfMagic.add(new DestroyAllOpponentMagics());\r\n            triggers.add(ManuallyActivation.getInstance());\r\n        }\r\n        if (name.equals(\"Dark Hole\")) {\r\n            actionsOfMagic.add(new DestroyAllBoardMonsters());\r\n            triggers.add(ManuallyActivation.getInstance());\r\n        }\r\n        if (name.equals(\"Mystical space typhoon\")) {\r\n            actionsOfMagic.add(new DestroyAMagicCard());\r\n            triggers.add(ManuallyActivation.getInstance());\r\n        }\r\n        if (name.equals(\"Yami\")) {\r\n            ArrayList<String> types = new ArrayList<>();\r\n            types.add(MonsterRace.FIEND.toString());\r\n            types.add(MonsterRace.SPELLCASTER.toString());\r\n            ArrayList<SideOfFeature> sideOfFeatures = new ArrayList<>();\r\n            sideOfFeatures.add(SideOfFeature.CURRENT);\r\n            sideOfFeatures.add(SideOfFeature.OPPONENT);\r\n            actionsOfMagic.add(new ChangingMonsterAttackAction(200, types, 1, sideOfFeatures));\r\n            actionsOfMagic.add(new ChangingMonsterDefenceAction(200, types, 1, sideOfFeatures));\r\n            types = new ArrayList<>();\r\n            types.add(MonsterRace.FAIRY.toString());\r\n            actionsOfMagic.add(new ChangingMonsterAttackAction(200, types, -1, sideOfFeatures));\r\n            actionsOfMagic.add(new ChangingMonsterDefenceAction(200, types, -1, sideOfFeatures));\r\n            triggers.add(FieldMagicFaceUp.getInstance());\r\n        }\r\n        if (name.equals(\"Forest\")) {\r\n            ArrayList<String> types = new ArrayList<>();\r\n            types.add(MonsterRace.BEAST.toString());\r\n            types.add(MonsterRace.INSECT.toString());\r\n            types.add(MonsterRace.BEAST_WARRIOR.toString());\r\n            ArrayList<SideOfFeature> sideOfFeatures = new ArrayList<>();\r\n            sideOfFeatures.add(SideOfFeature.CURRENT);\r\n            sideOfFeatures.add(SideOfFeature.OPPONENT);\r\n            actionsOfMagic.add(new ChangingMonsterAttackAction(200, types, 1, sideOfFeatures));\r\n            actionsOfMagic.add(new ChangingMonsterDefenceAction(200, types, 1, sideOfFeatures));\r\n            triggers.add(FieldMagicFaceUp.getInstance());\r\n        }\r\n        if (name.equals(\"Closed Forest\")) {\r\n            ArrayList<String> types = new ArrayList<>();\r\n            types.add(MonsterRace.BEAST.toString());\r\n            types.add(MonsterRace.BEAST_WARRIOR.toString());\r\n            ArrayList<SideOfFeature> sideOfFeaturesGraveyard = new ArrayList<>();\r\n            sideOfFeaturesGraveyard.add(SideOfFeature.OPPONENT);\r\n            sideOfFeaturesGraveyard.add(SideOfFeature.CURRENT);\r\n            ArrayList<SideOfFeature> sideOfFeaturesChangeAttack = new ArrayList<>();\r\n            sideOfFeaturesChangeAttack.add(SideOfFeature.CURRENT);\r\n            actionsOfMagic.add(new ChangingMonsterAttackWithGraveyardsMonster(100, 1, types, sideOfFeaturesGraveyard, sideOfFeaturesChangeAttack));\r\n            triggers.add(FieldMagicFaceUp.getInstance());\r\n        }\r\n        if (name.equals(\"Umiiruka\")) {\r\n            ArrayList<String> types = new ArrayList<>();\r\n            types.add(MonsterRace.AQUA.toString());\r\n            ArrayList<SideOfFeature> sideOfFeatures = new ArrayList<>();\r\n            sideOfFeatures.add(SideOfFeature.CURRENT);\r\n            sideOfFeatures.add(SideOfFeature.OPPONENT);\r\n            actionsOfMagic.add(new ChangingMonsterAttackAction(500, types, 1, sideOfFeatures));\r\n            actionsOfMagic.add(new ChangingMonsterDefenceAction(400, types, -1, sideOfFeatures));\r\n            triggers.add(FieldMagicFaceUp.getInstance());\r\n        }\r\n        if (name.equals(\"Sword of Dark Destruction\")) {\r\n            ArrayList<String> types = new ArrayList<>();\r\n            types.add(MonsterRace.FIEND.toString());\r\n            types.add(MonsterRace.SPELLCASTER.toString());\r\n            actionsOfMagic.add(new ChangingSomeRaceEquipedMonsterAttack(400, 1, types));\r\n            actionsOfMagic.add(new ChangingSomeRaceEquipedMonsterDefence(200, -1, types));\r\n            triggers.add(ManuallyActivation.getInstance());\r\n        }\r\n        if (name.equals(\"Black Pendant\")) {\r\n            actionsOfMagic.add(new ChangingEquipedMonsterAttack(500, 1));\r\n            triggers.add(ManuallyActivation.getInstance());\r\n        }\r\n        if (name.equals(\"Mirror Force\")) {\r\n            actionsOfMagic.add(new DestroyAllOpponentAttackingMonsters());\r\n            triggers.add(CurrentMonsterWantsToAttack.getInstance());\r\n        }\r\n        if (name.equals(\"Mind Crush\")) {\r\n            actionsOfMagic.add(new GuessingCardInOpponentHandAction());\r\n            triggers.add(ManuallyActivation.getInstance());\r\n        }\r\n        if (name.equals(\"Torrential Tribute\")) {\r\n            actionsOfMagic.add(new DestroyAllBoardMonsters());\r\n            triggers.add(SummonMonster.getInstance());\r\n        }\r\n        if (name.equals(\"Call of the Haunted\")) {\r\n            actionsOfMagic.add(new SummonMonsterFromOwnGraveYardAction());\r\n            triggers.add(ManuallyActivation.getInstance());\r\n        }\r\n//        if (name.equals(\"Magic Jammer\") || name.equals(\"Magic Cylinder\"))\r\n//            actionsOfMagic.add(StoppingActivationAction.getInstance());\r\n//        if (name.equals(\"Advanced Ritual Art\")) actionsOfMagic.add(RitualSummonAction.getInstance());\r\n//        if (name.equals(\"Ring of Defense\") || name.equals(\"Negate Attack\"))\r\n//            actionsOfMagic.add(MakeDamageZero.getInstance());\r\n//        if (name.equals(\"Trap Hole\") || name.equals(\"Twin Twisters\"))\r\n//            ;\r\n//        if (name.equals(\"Magnum Shield\") || name.equals(\"United We Stand\"))\r\n//            actionsOfMagic.add(ChangingMonsterAttackAction.getInstance());\r\n//        if (name.equals(\"Spell Absorption\")) actionsOfMagic.add(ChangingLifePointAction.getInstance());\r\n//        if (name.equals(\"Magnum Shield\") || name.equals(\"United We Stand\") || name.equals(\"Sword of Dark Destruction\") || name.equals(\"Umiiruka\") || name.equals(\"Forest\") || name.equals(\"Yami\"))\r\n//            actionsOfMagic.add(ChangeDefenceOfMonsterCard.getInstance());\r\n//        if (name.equals(\"Time Seal\")) actionsOfMagic.add(AvoidOpponentsCardDraw.getInstance());\r\n//        if (name.equals(\"Negate Attack\")) actionsOfMagic.add(EndBattlePhaseAction.getInstance());\r\n    }\r\n\r\n    public MagicCard() {\r\n        super();\r\n    }\r\n\r\n    public static void setMagicCards(ArrayList<MagicCard> magicCards) {\r\n        MagicCard.magicCards = magicCards;\r\n        Card.addMagicsToCards(magicCards);\r\n    }\r\n\r\n    public static MagicCard getMagicCardByName(String name) {\r\n        for (MagicCard magicCard : magicCards) {\r\n            if (magicCard.name.equals(name)) return magicCard;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void activeEffectsByEvent(Event event, Game game) {\r\n        boolean shouldActiveEffects = false;\r\n        for (Event trigger : triggers) {\r\n            if (trigger.equals(event)) {\r\n                shouldActiveEffects = true;\r\n                break;\r\n            }\r\n        }\r\n        if (shouldActiveEffects) {\r\n            for (Action actionOfMagic : actionsOfMagic) {\r\n                actionOfMagic.active(game);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getCardDetail() {\r\n        return\r\n                \"Name: \" + name +\r\n                        \"\\n\" + typeOfMagic.toString() +\r\n                        \"\\nType: \" + magicAttribute +\r\n                        \"\\nDescription: \" + description;\r\n    }\r\n\r\n    public MagicAttribute getMagicAttribute() {\r\n        return magicAttribute;\r\n    }\r\n\r\n    private void setMagicAttribute(MagicAttribute magicAttribute) {\r\n        this.magicAttribute = magicAttribute;\r\n    }\r\n\r\n    public MagicType getTypeOfMagic() {\r\n        return typeOfMagic;\r\n    }\r\n\r\n    private void setTypeOfMagic(MagicType typeOfMagic) {\r\n        this.typeOfMagic = typeOfMagic;\r\n    }\r\n\r\n    public MagicSpeed getMagicSpeed() {\r\n        return magicSpeed;\r\n    }\r\n\r\n    public void setMagicSpeed(MagicSpeed magicSpeed) {\r\n        this.magicSpeed = magicSpeed;\r\n    }\r\n\r\n    public void setDetails(String name, String typeOfMagic, String magicAttribute, String description, String speed, String price) {\r\n        setName(name);\r\n        setTypeOfMagic(MagicType.setType(typeOfMagic));\r\n        setMagicAttribute(MagicAttribute.setAttribute(magicAttribute));\r\n        setMagicSpeed(MagicSpeed.setSpeed(speed));\r\n        setDescription(description);\r\n        setPrice(price);\r\n        setMagicEffectAndEvents(name);\r\n    }\r\n\r\n    public ArrayList<Action> getActionsOfMagic() {\r\n        return actionsOfMagic;\r\n    }\r\n\r\n    @Override\r\n    public Card getCopy() {\r\n        MagicCard copy = new MagicCard();\r\n\r\n        // semi duplicate block:\r\n        copy.name = this.name;\r\n        copy.description = this.description;\r\n        copy.price = this.price;\r\n        //\r\n\r\n        copy.setMagicSpeed(this.magicSpeed);\r\n        copy.setTypeOfMagic(this.typeOfMagic);\r\n        copy.setMagicAttribute(this.magicAttribute);\r\n\r\n        return copy;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsProp/MagicCard.java b/src/main/java/model/cards/cardsProp/MagicCard.java
--- a/src/main/java/model/cards/cardsProp/MagicCard.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/cards/cardsProp/MagicCard.java	(date 1621264840434)
@@ -149,6 +149,22 @@
             actionsOfMagic.add(new SummonMonsterFromOwnGraveYardAction());
             triggers.add(ManuallyActivation.getInstance());
         }
+        if (name.equals("Change of Heart")) {
+            actionsOfMagic.add(new ChangeTeamOfMonsterCard());
+            triggers.add(ManuallyActivation.getInstance());
+        }
+        if (name.equals("Time Seal")) {
+            actionsOfMagic.add(new AvoidOpponentsCardDraw(2));
+            triggers.add(ManuallyActivation.getInstance());
+        }
+        if (name.equals("Pot Of Greed")) {
+            actionsOfMagic.add(new DrawCardFromTopOfDeck(2));
+            triggers.add(ManuallyActivation.getInstance());
+        }
+        if (name.equals("Terraforming")) {
+            actionsOfMagic.add(new TerraformingAction());
+            triggers.add(ManuallyActivation.getInstance());
+        }
 //        if (name.equals("Magic Jammer") || name.equals("Magic Cylinder"))
 //            actionsOfMagic.add(StoppingActivationAction.getInstance());
 //        if (name.equals("Advanced Ritual Art")) actionsOfMagic.add(RitualSummonAction.getInstance());
@@ -161,7 +177,6 @@
 //        if (name.equals("Spell Absorption")) actionsOfMagic.add(ChangingLifePointAction.getInstance());
 //        if (name.equals("Magnum Shield") || name.equals("United We Stand") || name.equals("Sword of Dark Destruction") || name.equals("Umiiruka") || name.equals("Forest") || name.equals("Yami"))
 //            actionsOfMagic.add(ChangeDefenceOfMonsterCard.getInstance());
-//        if (name.equals("Time Seal")) actionsOfMagic.add(AvoidOpponentsCardDraw.getInstance());
 //        if (name.equals("Negate Attack")) actionsOfMagic.add(EndBattlePhaseAction.getInstance());
     }
 
Index: src/main/java/model/events/eventChildren/GotAttacked.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/events/eventChildren/GotAttacked.java b/src/main/java/model/events/eventChildren/GotDestroyed.java
rename from src/main/java/model/events/eventChildren/GotAttacked.java
rename to src/main/java/model/events/eventChildren/GotDestroyed.java
--- a/src/main/java/model/events/eventChildren/GotAttacked.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/events/eventChildren/GotDestroyed.java	(date 1621268521012)
@@ -2,12 +2,12 @@
 
 import model.events.Event;
 
-public class GotAttacked extends Event {
-    private static GotAttacked instance;
+public class GotDestroyed extends Event {
+    private static GotDestroyed instance;
 
-    public static GotAttacked getInstance() {
+    public static GotDestroyed getInstance() {
         if (instance == null) {
-            instance = new GotAttacked();
+            instance = new GotDestroyed();
         }
         return instance;
     }
Index: src/main/java/model/gameprop/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.gameprop;\r\n\r\nimport model.gameprop.BoardProp.PlayerBoard;\r\nimport model.userProp.Deck;\r\nimport model.userProp.User;\r\n\r\npublic class Player {\r\n    public int playerLifePoint;\r\n    User user;\r\n    PlayerBoard board;\r\n    Deck deck;\r\n\r\n    {\r\n        playerLifePoint = 8000;\r\n    }\r\n\r\n    public Player(User user) {\r\n        setUser(user);\r\n        board = new PlayerBoard();\r\n        deck = user.getActiveDeck().getCopy();\r\n        gameSetUp();\r\n    }\r\n\r\n    public User getUser() {\r\n        return user;\r\n    }\r\n\r\n    private void setUser(User user) {\r\n        this.user = user;\r\n    }\r\n\r\n    public int getPlayerLifePoint() {\r\n        return this.playerLifePoint;\r\n    }\r\n\r\n    public Deck getDeck() {\r\n        return deck;\r\n    }\r\n\r\n    public PlayerBoard getBoard() {\r\n        return board;\r\n    }\r\n\r\n    public void changePlayerLifePoint(int amount) {\r\n        playerLifePoint -= amount;\r\n        if (playerLifePoint < 0)\r\n            playerLifePoint = 0;\r\n    }\r\n\r\n    private void gameSetUp() {\r\n        //Collections.shuffle(deck.getMainDeck());\r\n        //Collections.shuffle(deck.getSideDeck());\r\n\r\n        for (int i = 0; i < 5; i++) {\r\n            board.getPlayerHand().add(deck.getMainDeck().get(i));\r\n        }\r\n        deck.getMainDeck().subList(0, 5).clear();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/gameprop/Player.java b/src/main/java/model/gameprop/Player.java
--- a/src/main/java/model/gameprop/Player.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/gameprop/Player.java	(date 1621263564039)
@@ -5,12 +5,14 @@
 import model.userProp.User;
 
 public class Player {
+    public  boolean isAllowedToDraw;
     public int playerLifePoint;
     User user;
     PlayerBoard board;
     Deck deck;
 
     {
+        isAllowedToDraw = true;
         playerLifePoint = 8000;
     }
 
Index: src/main/java/model/gameprop/existenceBasedObserver/ExistenceObserver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/gameprop/existenceBasedObserver/ExistenceObserver.java b/src/main/java/model/gameprop/existenceBasedObserver/ExistenceObserver.java
new file mode 100644
--- /dev/null	(date 1622134183086)
+++ b/src/main/java/model/gameprop/existenceBasedObserver/ExistenceObserver.java	(date 1622134183086)
@@ -0,0 +1,61 @@
+package model.gameprop.existenceBasedObserver;
+
+import model.cards.cardsProp.Card;
+import model.cards.cardsProp.MagicCard;
+import model.cards.cardsProp.MonsterCard;
+import model.gameprop.BoardProp.MagicHouse;
+import model.gameprop.BoardProp.MonsterHouse;
+import model.gameprop.Player;
+
+import java.util.ArrayList;
+
+public abstract class ExistenceObserver {
+    protected static ArrayList<ExistenceObserver> existenceObservers;
+
+    static {
+        existenceObservers = new ArrayList<>();
+    }
+
+    protected Card observedCard;
+    protected Player ownerOfCard;
+
+    public ExistenceObserver(Card observedCard, Player ownerOfCard){
+        this.ownerOfCard = ownerOfCard;
+        this.observedCard = observedCard;
+
+        existenceObservers.add(this);
+    }
+
+    public static ArrayList<ExistenceObserver> getExistenceObservers() {
+        return existenceObservers;
+    }
+
+    public abstract void update();
+
+    public boolean exists() {
+        if (observedCard != null) { // card is assigned to observer!
+            if (observedCard instanceof MonsterCard) {
+                MonsterHouse[] monsterHouses = ownerOfCard.getBoard().getMonsterHouse();
+
+                for (MonsterHouse monsterHouse : monsterHouses) {
+                    MonsterCard monsterCard = monsterHouse.getMonsterCard();
+                    if (observedCard.equals(monsterCard)) {
+                        return true;
+                    }
+                }
+
+            } else if (observedCard instanceof MagicCard){
+                MagicHouse[] magicHouses = ownerOfCard.getBoard().getMagicHouse();
+
+                for (MagicHouse magicHouse : magicHouses) {
+                    MagicCard magicCard = magicHouse.getMagicCard();
+                    if (observedCard.equals(magicCard)) {
+                        return true;
+                    }
+                }
+
+            }
+        }
+            return false;
+    }
+}
Index: src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomethingByEquipCard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomethingByEquipCard.java b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomethingByEquipCard.java
new file mode 100644
--- /dev/null	(date 1622140509614)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomethingByEquipCard.java	(date 1622140509614)
@@ -0,0 +1,50 @@
+package model.cards.cardsActions.magicActionChildren;
+
+import controller.gamecontrollers.GetStringInputFromView;
+import model.cards.cardsProp.MagicCard;
+import model.cards.cardsProp.MonsterCard;
+import model.enums.GameEnums.RequestingInput;
+import model.enums.GameEnums.SideOfFeature;
+import model.enums.GameEnums.cardvisibility.MonsterHouseVisibilityState;
+import model.gameprop.BoardProp.MonsterHouse;
+import model.gameprop.GameInProcess;
+import model.gameprop.Player;
+import model.gameprop.existenceBasedObserver.EquipCardObserver;
+import model.gameprop.gamemodel.Game;
+
+public interface ChangingSomethingByEquipCard {
+    default String change(int changeValue, MonsterCard equippedCard, MagicCard equipCard, String whichPower, Player ownerOfCard) {
+        if (!isMonsterFaceUp(equippedCard)) {
+            GetStringInputFromView.getInputFromView(RequestingInput.ERROR_OF_INVALID_MONSTER_CARD_EQUIPPED);
+            return "Error";
+        }
+
+        MonsterHouse monsterHouseOfEquipped = MonsterHouse.getMonsterHouseByMonsterCard(equippedCard);
+
+        if (whichPower.equals("Attack")) {
+            monsterHouseOfEquipped.setPracticalAttack(monsterHouseOfEquipped.getPracticalAttack() + changeValue);
+        } else if (whichPower.equals("Defence")) {
+            monsterHouseOfEquipped.setPracticalDefence(monsterHouseOfEquipped.getPracticalDefence() + changeValue);
+        }
+
+        equippedCard.setEquippedWith(equipCard);
+
+        new EquipCardObserver(equippedCard, ownerOfCard);
+        return "Successful";
+    }
+
+    default boolean isMonsterFaceUp(MonsterCard monsterCard) {
+        Game game = GameInProcess.getGame();
+        Player ownerOfCard = game.getPlayer(SideOfFeature.CURRENT);
+        MonsterHouse[] monsterHouses = ownerOfCard.getBoard().getMonsterHouse();
+        for (MonsterHouse monsterHouse : monsterHouses) {
+            if (monsterHouse.getMonsterCard().equals(monsterCard)) {
+                if (!monsterHouse.getState().equals(MonsterHouseVisibilityState.DH)) { // isn't defensive hidden!
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
+}
Index: src/main/java/model/gameprop/existenceBasedObserver/EquipCardObserver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/gameprop/existenceBasedObserver/EquipCardObserver.java b/src/main/java/model/gameprop/existenceBasedObserver/EquipCardObserver.java
new file mode 100644
--- /dev/null	(date 1622144915444)
+++ b/src/main/java/model/gameprop/existenceBasedObserver/EquipCardObserver.java	(date 1622144915444)
@@ -0,0 +1,52 @@
+package model.gameprop.existenceBasedObserver;
+
+import model.cards.cardsActions.Action;
+import model.cards.cardsProp.Card;
+import model.cards.cardsProp.MagicCard;
+import model.cards.cardsProp.MonsterCard;
+import model.enums.GameEnums.cardvisibility.MonsterHouseVisibilityState;
+import model.gameprop.BoardProp.MonsterHouse;
+import model.gameprop.Player;
+
+public class EquipCardObserver extends ExistenceObserver{
+    private MonsterCard equippedCard;
+    private Action toRevertAction;
+
+    public EquipCardObserver(Card observedCard, Player ownerOfCard) {
+        super(observedCard, ownerOfCard);
+        setEquippedCard((MonsterCard) observedCard);
+    }
+
+    public void setToRevertAction(Action toRevertAction) {
+        this.toRevertAction = toRevertAction;
+    }
+
+    public void setEquippedCard(MonsterCard equippedCard) {
+        this.equippedCard = equippedCard;
+    }
+
+    public boolean isMonsterFaceUp() {
+        MonsterHouse[] monsterHouses = ownerOfCard.getBoard().getMonsterHouse();
+        for (MonsterHouse monsterHouse : monsterHouses) {
+            if (monsterHouse.getMonsterCard().equals(observedCard)) {
+                if (!monsterHouse.getState().equals(MonsterHouseVisibilityState.DH)) {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
+    @Override
+    public void update() {
+        if (!exists() || !isMonsterFaceUp()) {
+            actionFinalize();
+            existenceObservers.remove(this);
+        }
+    }
+
+    private void actionFinalize() {
+        MagicCard equipCard = equippedCard.getEquippedWith();
+        ownerOfCard.getBoard().moveCardToGraveYard(equipCard); // when equipped card goes to Graveyard or turns to hidden situation, equip card goes to graveyard!
+    }
+}
Index: src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquipedMonsterAttack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.cards.cardsActions.magicActionChildren;\r\n\r\nimport model.cards.cardsActions.Action;\r\nimport model.cards.cardsProp.MonsterCard;\r\nimport model.gameprop.gamemodel.Game;\r\n\r\npublic class ChangingEquipedMonsterAttack extends Action {\r\n    private MonsterCard equipedMonster;\r\n    private final int changeAttack;\r\n    private final int addOrMinus;\r\n\r\n    {\r\n        name = this.getClass().getSimpleName();\r\n        equipedMonster = null;\r\n        isActivatedBefore = false;\r\n    }\r\n\r\n    public ChangingEquipedMonsterAttack(int changeAttack, int addOrMinus) {\r\n        this.addOrMinus = addOrMinus;\r\n        this.changeAttack = changeAttack;\r\n    }\r\n\r\n    public MonsterCard getEquipedMonster() {\r\n        return equipedMonster;\r\n    }\r\n\r\n    @Override\r\n    public void active(Game game) {\r\n        equipedMonster = Action.equipAMonsterWithSpell(this, game);\r\n        int attack = equipedMonster.getAttack();\r\n        attack += changeAttack * addOrMinus;\r\n        equipedMonster.setAttack(attack);\r\n        isActivatedBefore = true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquipedMonsterAttack.java b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquipedMonsterAttack.java
--- a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquipedMonsterAttack.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquipedMonsterAttack.java	(date 1622140509595)
@@ -1,10 +1,20 @@
 package model.cards.cardsActions.magicActionChildren;
 
+import controller.gamecontrollers.GetStringInputFromView;
 import model.cards.cardsActions.Action;
+import model.cards.cardsProp.MagicCard;
 import model.cards.cardsProp.MonsterCard;
+import model.enums.GameEnums.RequestingInput;
+import model.enums.GameEnums.SideOfFeature;
+import model.gameprop.BoardProp.MonsterHouse;
+import model.gameprop.Player;
+import model.gameprop.existenceBasedObserver.EquipCardObserver;
+import model.gameprop.existenceBasedObserver.ExistenceObserver;
 import model.gameprop.gamemodel.Game;
 
-public class ChangingEquipedMonsterAttack extends Action {
+import java.util.ArrayList;
+
+public class ChangingEquipedMonsterAttack extends Action implements ChangingSomethingByEquipCard{
     private MonsterCard equipedMonster;
     private final int changeAttack;
     private final int addOrMinus;
@@ -26,10 +36,25 @@
 
     @Override
     public void active(Game game) {
+        Player ownerOfCard = game.getPlayer(SideOfFeature.CURRENT);
+
+        MagicCard equipMagicCard = (MagicCard) game.getCardProp().getCard(); // the last selected Card is the spell Card!
+
         equipedMonster = Action.equipAMonsterWithSpell(this, game);
-        int attack = equipedMonster.getAttack();
-        attack += changeAttack * addOrMinus;
-        equipedMonster.setAttack(attack);
-        isActivatedBefore = true;
+
+        String result = change(changeAttack, equipedMonster, equipMagicCard, "Attack", ownerOfCard);
+
+        if (result.equals("Successful")) {
+            ArrayList<ExistenceObserver> existenceObservers = ExistenceObserver.getExistenceObservers();
+            EquipCardObserver lastObserver = (EquipCardObserver) existenceObservers.get(existenceObservers.size() - 1);
+            // it can be guaranteed that the last observer is related to this action!
+            lastObserver.setToRevertAction(this);
+
+            isActivatedBefore = true;
+        } else {
+            GetStringInputFromView.getInputFromView(RequestingInput.ERROR_OF_INVALID_MONSTER_CARD_EQUIPPED);
+            active(game);
+        }
     }
+
 }
Index: src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterAttack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.cards.cardsActions.magicActionChildren;\r\n\r\nimport model.cards.cardsActions.Action;\r\nimport model.cards.cardsProp.MonsterCard;\r\nimport model.gameprop.gamemodel.Game;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ChangingSomeRaceEquipedMonsterAttack extends Action {\r\n    private final ArrayList<String> typesToChangeAttack;\r\n    private final int changeAttack;\r\n    private final int addOrMinus;\r\n    private MonsterCard equipedMonster;\r\n\r\n    {\r\n        name = this.getClass().getSimpleName();\r\n    }\r\n\r\n    public ChangingSomeRaceEquipedMonsterAttack(int changeAttack, int addOrMinus, ArrayList<String> typesToChangeAttack) {\r\n        this.changeAttack = changeAttack;\r\n        this.addOrMinus = addOrMinus;\r\n        this.typesToChangeAttack = typesToChangeAttack;\r\n    }\r\n\r\n    public MonsterCard getEquipedMonster() {\r\n        return equipedMonster;\r\n    }\r\n\r\n    @Override\r\n    public void active(Game game) {\r\n        equipedMonster = Action.equipAMonsterWithSpell(this, game);\r\n        if (typesToChangeAttack.contains(equipedMonster.getRace().toString())) {\r\n            int attack = equipedMonster.getAttack();\r\n            attack += changeAttack * addOrMinus;\r\n            equipedMonster.setAttack(attack);\r\n            isActivatedBefore = true;\r\n        }\r\n        isActivatedBefore = true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterAttack.java b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterAttack.java
--- a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterAttack.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterAttack.java	(date 1622140509654)
@@ -1,12 +1,20 @@
 package model.cards.cardsActions.magicActionChildren;
 
+import controller.gamecontrollers.GetStringInputFromView;
 import model.cards.cardsActions.Action;
+import model.cards.cardsProp.MagicCard;
 import model.cards.cardsProp.MonsterCard;
+import model.enums.GameEnums.RequestingInput;
+import model.enums.GameEnums.SideOfFeature;
+import model.gameprop.Player;
+import model.gameprop.SelectedCardProp;
+import model.gameprop.existenceBasedObserver.EquipCardObserver;
+import model.gameprop.existenceBasedObserver.ExistenceObserver;
 import model.gameprop.gamemodel.Game;
 
 import java.util.ArrayList;
 
-public class ChangingSomeRaceEquipedMonsterAttack extends Action {
+public class ChangingSomeRaceEquipedMonsterAttack extends Action implements ChangingSomethingByEquipCard{
     private final ArrayList<String> typesToChangeAttack;
     private final int changeAttack;
     private final int addOrMinus;
@@ -28,13 +36,29 @@
 
     @Override
     public void active(Game game) {
+        Player ownerOfCard = game.getPlayer(SideOfFeature.CURRENT);
+
+        MagicCard equipMagicCard = (MagicCard) game.getCardProp().getCard(); // the last selected Card is the spell Card!
+
         equipedMonster = Action.equipAMonsterWithSpell(this, game);
+
         if (typesToChangeAttack.contains(equipedMonster.getRace().toString())) {
-            int attack = equipedMonster.getAttack();
-            attack += changeAttack * addOrMinus;
-            equipedMonster.setAttack(attack);
-            isActivatedBefore = true;
+            String result = change(changeAttack, equipedMonster, equipMagicCard, "Attack", ownerOfCard);
+
+            if (result.equals("Successful")) {
+                ArrayList<ExistenceObserver> existenceObservers = ExistenceObserver.getExistenceObservers();
+                EquipCardObserver lastObserver = (EquipCardObserver) existenceObservers.get(existenceObservers.size() - 1);
+                // it can be guaranteed that the last observer is related to this action!
+                lastObserver.setToRevertAction(this);
+
+                isActivatedBefore = true;
+            } else {
+                active(game);
+            }
+        } else {
+            GetStringInputFromView.getInputFromView(RequestingInput.ERROR_OF_INVALID_MONSTER_CARD_EQUIPPED);
+            active(game); // try Again!
         }
-        isActivatedBefore = true;
     }
+
 }
Index: src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackWithGraveyardsMonster.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.cards.cardsActions.magicActionChildren;\r\n\r\nimport model.cards.cardsActions.Action;\r\nimport model.cards.cardsProp.Card;\r\nimport model.cards.cardsProp.MonsterCard;\r\nimport model.enums.GameEnums.SideOfFeature;\r\nimport model.gameprop.BoardProp.MonsterHouse;\r\nimport model.gameprop.BoardProp.PlayerBoard;\r\nimport model.gameprop.gamemodel.Game;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ChangingMonsterAttackWithGraveyardsMonster extends Action {\r\n    private final ArrayList<String> typesToChangeAttack;\r\n    private final int changeAttackForEachMonsterInGraveyard;\r\n    private final int addOrMinus;\r\n    private final ArrayList<SideOfFeature> countWhichGraveYards;\r\n    private final ArrayList<SideOfFeature> changeWhichTeamMonstersAttack;\r\n\r\n    {\r\n        name = this.getClass().getSimpleName();\r\n    }\r\n\r\n    public ChangingMonsterAttackWithGraveyardsMonster(int changeAttackForEachMonsterInGraveyard, int addOrMinus, ArrayList<String> typesToChangeAttack, ArrayList<SideOfFeature> countWhichGraveYards, ArrayList<SideOfFeature> changeWhichTeamMonstersAttack) {\r\n        this.addOrMinus = addOrMinus;\r\n        this.changeAttackForEachMonsterInGraveyard = changeAttackForEachMonsterInGraveyard;\r\n        this.typesToChangeAttack = typesToChangeAttack;\r\n        this.changeWhichTeamMonstersAttack = changeWhichTeamMonstersAttack;\r\n        this.countWhichGraveYards = countWhichGraveYards;\r\n    }\r\n\r\n    @Override\r\n    public void active(Game game) {\r\n        int countMonstersInGraveyard = 0;\r\n        for (SideOfFeature countWhichGraveYard : countWhichGraveYards) {\r\n            PlayerBoard playerBoard = game.getPlayer(countWhichGraveYard).getBoard();\r\n            for (Card destroyedCard : playerBoard.getGraveYard().getDestroyedCards()) {\r\n                if (destroyedCard instanceof MonsterCard) {\r\n                    countMonstersInGraveyard++;\r\n                }\r\n            }\r\n        }\r\n        int changeAttack = countMonstersInGraveyard * changeAttackForEachMonsterInGraveyard * addOrMinus;\r\n        for (SideOfFeature sideOfFeature : changeWhichTeamMonstersAttack) {\r\n            PlayerBoard playerBoard = game.getPlayer(sideOfFeature).getBoard();\r\n            for (MonsterHouse monsterHouse : playerBoard.getMonsterHouse()) {\r\n                if (typesToChangeAttack.contains(monsterHouse.getMonsterCard().getRace().toString())) {\r\n                    int monsterAttack = monsterHouse.getMonsterCard().getAttack();\r\n                    monsterAttack += changeAttack;\r\n                    monsterHouse.getMonsterCard().setAttack(monsterAttack);\r\n                }\r\n            }\r\n        }\r\n        isActivatedBefore = true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackWithGraveyardsMonster.java b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackWithGraveyardsMonster.java
--- a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackWithGraveyardsMonster.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackWithGraveyardsMonster.java	(date 1622126643666)
@@ -6,16 +6,21 @@
 import model.enums.GameEnums.SideOfFeature;
 import model.gameprop.BoardProp.MonsterHouse;
 import model.gameprop.BoardProp.PlayerBoard;
+import model.gameprop.GameInProcess;
+import model.gameprop.Player;
+import model.gameprop.existenceBasedObserver.ExistenceObserver;
+import model.gameprop.existenceBasedObserver.FieldCardObserver;
 import model.gameprop.gamemodel.Game;
 
 import java.util.ArrayList;
 
-public class ChangingMonsterAttackWithGraveyardsMonster extends Action {
+public class ChangingMonsterAttackWithGraveyardsMonster extends Action implements ChangingSomethingByFieldCard{
     private final ArrayList<String> typesToChangeAttack;
     private final int changeAttackForEachMonsterInGraveyard;
     private final int addOrMinus;
     private final ArrayList<SideOfFeature> countWhichGraveYards;
     private final ArrayList<SideOfFeature> changeWhichTeamMonstersAttack;
+    private int finalChangeValue;
 
     {
         name = this.getClass().getSimpleName();
@@ -29,6 +34,18 @@
         this.countWhichGraveYards = countWhichGraveYards;
     }
 
+    public ArrayList<SideOfFeature> getChangeWhichTeamMonstersAttack() {
+        return changeWhichTeamMonstersAttack;
+    }
+
+    public int getFinalChangeValue() {
+        return finalChangeValue;
+    }
+
+    public ArrayList<String> getTypesToChangeAttack() {
+        return typesToChangeAttack;
+    }
+
     @Override
     public void active(Game game) {
         int countMonstersInGraveyard = 0;
@@ -40,17 +57,16 @@
                 }
             }
         }
-        int changeAttack = countMonstersInGraveyard * changeAttackForEachMonsterInGraveyard * addOrMinus;
-        for (SideOfFeature sideOfFeature : changeWhichTeamMonstersAttack) {
-            PlayerBoard playerBoard = game.getPlayer(sideOfFeature).getBoard();
-            for (MonsterHouse monsterHouse : playerBoard.getMonsterHouse()) {
-                if (typesToChangeAttack.contains(monsterHouse.getMonsterCard().getRace().toString())) {
-                    int monsterAttack = monsterHouse.getMonsterCard().getAttack();
-                    monsterAttack += changeAttack;
-                    monsterHouse.getMonsterCard().setAttack(monsterAttack);
-                }
-            }
-        }
+        finalChangeValue = countMonstersInGraveyard * changeAttackForEachMonsterInGraveyard * addOrMinus;
+
+        Player currentPlayer = GameInProcess.getGame().getPlayer(SideOfFeature.CURRENT);
+        change(finalChangeValue, changeWhichTeamMonstersAttack, typesToChangeAttack, currentPlayer, "Attack");
+
+        ArrayList<ExistenceObserver> existenceObservers = ExistenceObserver.getExistenceObservers();
+        FieldCardObserver lastObserver = (FieldCardObserver) existenceObservers.get(existenceObservers.size() - 1);
+        // it can be guaranteed that the last observer is from this type as the last one is added just moments (lines!) before in "change()"!
+        lastObserver.setToRevertAction(this);
+
         isActivatedBefore = true;
     }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"ALL\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"45f87b1a-8403-4c06-b2b2-57ebfe555883\" name=\"Default Changelist\" comment=\"game added as an argument to actions\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/ActionOfMagic.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/ActionOfMagic.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidAttackOfMonsters.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidAttackOfMonsters.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidOpponentsCardDraw.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidOpponentsCardDraw.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/CancelSummon.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/CancelSummon.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangeTeamOfMonsterCard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangeTeamOfMonsterCard.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquipedMonsterAttack.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquipedMonsterAttack.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquippedMonsterDefence.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquippedMonsterDefence.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingLifePointAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingLifePointAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackWithGraveyardsMonster.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackWithGraveyardsMonster.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterDefenceAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterDefenceAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterAttack.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterAttack.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterDefence.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterDefence.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DamageOpponentHealthBar.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DamageOpponentHealthBar.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAMagicCard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAMagicCard.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllBoardMonsters.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllBoardMonsters.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentAttackingMonsters.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentAttackingMonsters.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentMagics.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentMagics.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentMonsters.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentMonsters.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DrawCardFromTopOfDeck.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DrawCardFromTopOfDeck.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/EndBattlePhaseAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/EndBattlePhaseAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/GuessingCardInOpponentHandAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/GuessingCardInOpponentHandAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/MakeDamageZero.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/MakeDamageZero.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/RitualSummonAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/RitualSummonAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/StoppingActivationAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/StoppingActivationAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/SummonMonsterFromBothGraveYardsAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/SummonMonsterFromBothGraveYardsAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/SummonMonsterFromOwnGraveYardAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/SummonMonsterFromOwnGraveYardAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/TerraformingAction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/TerraformingAction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsProp/Card.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsProp/Card.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsProp/MagicCard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/cards/cardsProp/MagicCard.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/events/Event.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/events/Event.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view />\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"JUnit4 Test Class\" />\r\n        <option value=\"package-info\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"proportion\" value=\"0.6115204\" />\r\n    <option name=\"showPreview\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1rJuVdeiVFuEczDxOSgLXXwjCQe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"com.intellij.openapi.externalSystem.service.settings.ExternalSystemGroupConfigurable\" value=\"ALL\" />\r\n    <property name=\"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\" value=\"JUnit4\" />\r\n    <property name=\"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4\" value=\"\" />\r\n    <property name=\"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\" value=\"\" />\r\n    <property name=\"last_directory_selection\" value=\"$PROJECT_DIR$/src/main/java/Viewer\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/src/main/java/Main.java\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"restartRequiresConfirmation\" value=\"false\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.pluginManager\" />\r\n  </component>\r\n  <component name=\"ReaderModeSettings\">\r\n    <option name=\"enabled\" value=\"false\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"Model\" />\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\SooSan\\Desktop\\project-team-10\\jsonResources\" />\r\n      <recent name=\"G:\\semister 2\\java Yu_gi_oh project\\yu-gi-oh-Project\\csvFile\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"Viewer\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"Viewer\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunAnythingCache\">\r\n    <option name=\"myCommands\">\r\n      <command value=\"gradle --build-cache\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration default=\"true\" type=\"ArquillianJUnit\" factoryName=\"\" nameIsGenerated=\"true\">\r\n      <option name=\"arquillianRunConfiguration\">\r\n        <value>\r\n          <option name=\"containerStateName\" value=\"\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"11\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"project-team-10\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"G:/semister 2/java Yu_gi_oh project/yu-gi-oh-Project\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"--build-cache\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list />\r\n        </option>\r\n        <option name=\"vmOptions\" value=\"\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Gradle.G:/semister 2/java Yu_gi_oh project/yu-gi-oh-Project\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Gradle.G:/semister 2/java Yu_gi_oh project/yu-gi-oh-Project\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"45f87b1a-8403-4c06-b2b2-57ebfe555883\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1618706541361</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1618706541361</updated>\r\n      <workItem from=\"1618706542436\" duration=\"1003000\" />\r\n      <workItem from=\"1618722106867\" duration=\"2471000\" />\r\n      <workItem from=\"1618724609991\" duration=\"8072000\" />\r\n      <workItem from=\"1618762875557\" duration=\"18932000\" />\r\n      <workItem from=\"1618791692302\" duration=\"18103000\" />\r\n      <workItem from=\"1618849546067\" duration=\"8175000\" />\r\n      <workItem from=\"1618867102585\" duration=\"2286000\" />\r\n      <workItem from=\"1618943314360\" duration=\"749000\" />\r\n      <workItem from=\"1618947530448\" duration=\"6160000\" />\r\n      <workItem from=\"1618958340462\" duration=\"2768000\" />\r\n      <workItem from=\"1619209974843\" duration=\"1247000\" />\r\n      <workItem from=\"1619215711085\" duration=\"1834000\" />\r\n      <workItem from=\"1619218328912\" duration=\"172000\" />\r\n      <workItem from=\"1619218518367\" duration=\"2750000\" />\r\n      <workItem from=\"1619237459302\" duration=\"7979000\" />\r\n      <workItem from=\"1619276688699\" duration=\"1353000\" />\r\n      <workItem from=\"1619303927490\" duration=\"4621000\" />\r\n      <workItem from=\"1619316111069\" duration=\"112000\" />\r\n      <workItem from=\"1619326345905\" duration=\"3622000\" />\r\n      <workItem from=\"1619371072376\" duration=\"4000\" />\r\n      <workItem from=\"1619386883453\" duration=\"3686000\" />\r\n      <workItem from=\"1619421313911\" duration=\"1706000\" />\r\n      <workItem from=\"1619483777349\" duration=\"10693000\" />\r\n      <workItem from=\"1619551139463\" duration=\"581000\" />\r\n      <workItem from=\"1619855555842\" duration=\"22516000\" />\r\n      <workItem from=\"1619892862050\" duration=\"3305000\" />\r\n      <workItem from=\"1620057352869\" duration=\"27695000\" />\r\n      <workItem from=\"1620144273542\" duration=\"4503000\" />\r\n      <workItem from=\"1620151715726\" duration=\"12272000\" />\r\n      <workItem from=\"1620551235289\" duration=\"10314000\" />\r\n      <workItem from=\"1620842614576\" duration=\"235000\" />\r\n      <workItem from=\"1620842867200\" duration=\"14931000\" />\r\n      <workItem from=\"1620929610484\" duration=\"668000\" />\r\n      <workItem from=\"1620930929473\" duration=\"901000\" />\r\n      <workItem from=\"1620947078549\" duration=\"229000\" />\r\n      <workItem from=\"1620956538345\" duration=\"13214000\" />\r\n      <workItem from=\"1621006540814\" duration=\"6959000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"end of task 1 and edit card abstract class\">\r\n      <created>1618960666801</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1618960666801</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"change jupiter version\">\r\n      <created>1618960706343</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1618960706343</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"change jupiter version\">\r\n      <created>1619211640817</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619211640817</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"change jupiter version\">\r\n      <created>1619237677120</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619237677120</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"set magic and monsters card and enum\">\r\n      <created>1619304079536</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619304079536</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"fix some of warnings\">\r\n      <created>1619308771651</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619308771651</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"fix some bugs in main menu and change accessibleness of some contents\">\r\n      <created>1619312049679</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619312049679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"clean\">\r\n      <created>1619327375448</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619327375448</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"clean\">\r\n      <created>1619328708612</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619328708612</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"game models and general structure\">\r\n      <created>1619500368832</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619500368832</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"game models and general structure\">\r\n      <created>1619500541760</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619500541760</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"game models and general structure\">\r\n      <created>1619551361013</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619551361013</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"-add abstract method &quot;getCopy&quot; to &quot;Card&quot;&#10;-override &quot;getCopy&quot; by &quot;Monster&quot; &amp; &quot;Magic&quot; classes.&#10;-add &quot;getCopy&quot; to &quot;Deck&quot; class\">\r\n      <created>1619513873569</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619513873569</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"-add abstract method &quot;getCopy&quot; to &quot;Card&quot;&#10;-override &quot;getCopy&quot; by &quot;Monster&quot; &amp; &quot;Magic&quot; classes.&#10;-add &quot;getCopy&quot; to &quot;Deck&quot; class&#10;-finish &quot;Deck&quot; model class&#10;-add empty classes; DeckController, DeckMenu, DeckMenuDisplay&#10;-fix fields in &quot;Card&quot; branch&#10;-relate &quot;User&quot; &amp; &quot;Deck&quot; classes\">\r\n      <created>1619544790577</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619544790577</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"-add abstract method &quot;getCopy&quot; to &quot;Card&quot;&#10;-override &quot;getCopy&quot; by &quot;Monster&quot; &amp; &quot;Magic&quot; classes.&#10;-add &quot;getCopy&quot; to &quot;Deck&quot; class&#10;-finish &quot;Deck&quot; model class&#10;-add empty classes; DeckController, DeckMenu, DeckMenuDisplay&#10;-fix fields in &quot;Card&quot; branch&#10;-relate &quot;User&quot; &amp; &quot;Deck&quot; classes&#10;-add &quot;DeckMenu&quot; errors to &quot;Error&quot; ENUM\">\r\n      <created>1619545766295</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619545766295</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"deck\">\r\n      <created>1619938237542</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619938237542</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۳۵\" summary=\"DuelMenu added\">\r\n      <created>1619951179505</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۳۵\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۳۵\" />\r\n      <updated>1619951179505</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۳۶\" summary=\"DuelMenu added\">\r\n      <created>1619951562582</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۳۶\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۳۶\" />\r\n      <updated>1619951562583</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۳۷\" summary=\"DuelMenu adding final error\">\r\n      <created>1619958835634</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۳۷\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۳۷\" />\r\n      <updated>1619958835634</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"clean code and package classes\">\r\n      <created>1620057160988</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620057160989</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00039\" summary=\"show card added and some clean code changes\">\r\n      <created>1620083480491</created>\r\n      <option name=\"number\" value=\"00039\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620083480491</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"show card added and some clean code changes\">\r\n      <created>1620086343723</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620086343723</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"show card added and some clean code changes\">\r\n      <created>1620095127420</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620095127420</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"entery of the game\">\r\n      <created>1620095240397</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620095240397</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00043\" summary=\"edit register menu login messages\">\r\n      <created>1620095998860</created>\r\n      <option name=\"number\" value=\"00043\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620095998860</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00044\" summary=\"edit game models and enums\">\r\n      <created>1620117998675</created>\r\n      <option name=\"number\" value=\"00044\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620117998675</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00045\" summary=\"working on GeneralCommands\">\r\n      <created>1620146297268</created>\r\n      <option name=\"number\" value=\"00045\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620146297269</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00046\" summary=\"polymorphism in enums\">\r\n      <created>1620148959762</created>\r\n      <option name=\"number\" value=\"00046\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620148959762</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00047\" summary=\"polymorphism in enums and Fix raw use of enums\">\r\n      <created>1620149759312</created>\r\n      <option name=\"number\" value=\"00047\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620149759312</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00048\" summary=\"completing general command\">\r\n      <created>1620191207803</created>\r\n      <option name=\"number\" value=\"00048\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620191207803</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00049\" summary=\"completing general command\">\r\n      <created>1620193896911</created>\r\n      <option name=\"number\" value=\"00049\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620193896911</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00050\" summary=\"completing general command\">\r\n      <created>1620194709532</created>\r\n      <option name=\"number\" value=\"00050\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00050\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1620194709532</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۵۱\" summary=\"add first event and effect\">\r\n      <created>1620216989418</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۵۱\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۵۱\" />\r\n      <updated>1620216989419</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۵۲\" summary=\"better naming\">\r\n      <created>1620217338661</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۵۲\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۵۲\" />\r\n      <updated>1620217338661</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۵۳\" summary=\"correction of effect and event to new structure\">\r\n      <created>1620228555476</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۵۳\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۵۳\" />\r\n      <updated>1620228555477</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۵۴\" summary=\"MindCrushEffect and some details\">\r\n      <created>1620295193600</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۵۴\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۵۴\" />\r\n      <updated>1620295193600</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۵۵\" summary=\"ManuallyActivation added\">\r\n      <created>1620315607686</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۵۵\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۵۵\" />\r\n      <updated>1620315607686</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۵۶\" summary=\"ManuallyActivation added\">\r\n      <created>1620318279173</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۵۶\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۵۶\" />\r\n      <updated>1620318279173</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۵۷\" summary=\"new structure for actions\">\r\n      <created>1620390954617</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۵۷\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۵۷\" />\r\n      <updated>1620390954618</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۵۸\" summary=\"json\">\r\n      <created>1620411136104</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۵۸\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۵۸\" />\r\n      <updated>1620411136104</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۵۹\" summary=\"json\">\r\n      <created>1620413922144</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۵۹\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۵۹\" />\r\n      <updated>1620413922144</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۶۰\" summary=\"adding magic actions to json\">\r\n      <created>1620573345261</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۶۰\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۶۰\" />\r\n      <updated>1620573345262</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۶۱\" summary=\"add some actions\">\r\n      <created>1620995913257</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۶۱\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۶۱\" />\r\n      <updated>1620995913259</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۶۲\" summary=\"actions almost completed\">\r\n      <created>1621088675898</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۶۲\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۶۲\" />\r\n      <updated>1621088675898</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۶۳\" summary=\"add actions to cards\">\r\n      <created>1621096563198</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۶۳\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۶۳\" />\r\n      <updated>1621096563198</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۶۴\" summary=\"restore data again\">\r\n      <created>1621101451197</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۶۴\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۶۴\" />\r\n      <updated>1621101451213</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۶۵\" summary=\"restore data again\">\r\n      <created>1621101745423</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۶۵\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۶۵\" />\r\n      <updated>1621101745423</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۶۶\" summary=\"restore data:(\">\r\n      <created>1621105148067</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۶۶\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۶۶\" />\r\n      <updated>1621105148067</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۶۷\" summary=\"add actions completely\">\r\n      <created>1621174939152</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۶۷\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۶۷\" />\r\n      <updated>1621174939152</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"68\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"board\" />\r\n    <MESSAGE value=\"clean code and package classes\" />\r\n    <MESSAGE value=\"show card added and some clean code changes\" />\r\n    <MESSAGE value=\"entery of the game\" />\r\n    <MESSAGE value=\"edit register menu login messages\" />\r\n    <MESSAGE value=\"edit game models and enums\" />\r\n    <MESSAGE value=\"working on GeneralCommands\" />\r\n    <MESSAGE value=\"polymorphism in enums\" />\r\n    <MESSAGE value=\"polymorphism in enums and Fix raw use of enums\" />\r\n    <MESSAGE value=\"completing general command\" />\r\n    <MESSAGE value=\"add first event and effect\" />\r\n    <MESSAGE value=\"better naming\" />\r\n    <MESSAGE value=\"correction of effect and event to new structure\" />\r\n    <MESSAGE value=\"MindCrushEffect and some details\" />\r\n    <MESSAGE value=\"ManuallyActivation added\" />\r\n    <MESSAGE value=\"new structure for actions\" />\r\n    <MESSAGE value=\"json\" />\r\n    <MESSAGE value=\"adding magic actions to json\" />\r\n    <MESSAGE value=\"add some actions\" />\r\n    <MESSAGE value=\"actions almost completed\" />\r\n    <MESSAGE value=\"add actions to cards\" />\r\n    <MESSAGE value=\"restore data again\" />\r\n    <MESSAGE value=\"restore data:(\" />\r\n    <MESSAGE value=\"add actions completely\" />\r\n    <MESSAGE value=\"game added as an argument to actions\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"game added as an argument to actions\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/controller/gamecontrollers/gamestagecontroller/handlers/changeposition/processors/SelectedCardProcessor.java</url>\r\n          <line>15</line>\r\n          <properties class=\"controller.gamecontrollers.gamestagecontroller.handlers.changeposition.processors.SelectedCardProcessor\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Main_java$Main.ic\" NAME=\"Main Coverage Results\" MODIFIED=\"1620630295245\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/.idea/workspace.xml	(date 1622144915332)
@@ -4,39 +4,36 @@
     <option name="autoReloadType" value="ALL" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="45f87b1a-8403-4c06-b2b2-57ebfe555883" name="Default Changelist" comment="game added as an argument to actions">
+    <list default="true" id="45f87b1a-8403-4c06-b2b2-57ebfe555883" name="Default Changelist" comment="change &quot;ActionOfMagic&quot; to &quot;Action&quot;">
+      <change afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomethingByEquipCard.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomethingByFieldCard.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/monsterActionChildren/DestroyOneOpponentMonster.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/monsterActionChildren/DestroyTheAttackerMonsterOfOpponent.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/model/gameprop/existenceBasedObserver/EquipCardObserver.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/model/gameprop/existenceBasedObserver/ExistenceObserver.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/model/gameprop/existenceBasedObserver/FieldCardObserver.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/model/gameprop/turnBasedObserver/AvoidDrawingForSomeTurnsObserver.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/ActionOfMagic.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/ActionOfMagic.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidAttackOfMonsters.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidAttackOfMonsters.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controller/gamecontrollers/gamestagecontroller/DrawPhaseController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/gamecontrollers/gamestagecontroller/DrawPhaseController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controller/gamecontrollers/gamestagecontroller/HeadController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/gamecontrollers/gamestagecontroller/HeadController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidOpponentsCardDraw.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/AvoidOpponentsCardDraw.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/CancelSummon.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/CancelSummon.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangeTeamOfMonsterCard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangeTeamOfMonsterCard.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquipedMonsterAttack.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquipedMonsterAttack.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquippedMonsterDefence.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquippedMonsterDefence.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingLifePointAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingLifePointAction.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackAction.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackWithGraveyardsMonster.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackWithGraveyardsMonster.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterDefenceAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterDefenceAction.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterAttack.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterAttack.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterDefence.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterDefence.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DamageOpponentHealthBar.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DamageOpponentHealthBar.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAMagicCard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAMagicCard.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllBoardMonsters.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllBoardMonsters.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentAttackingMonsters.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentAttackingMonsters.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentMagics.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentMagics.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentMonsters.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DestroyAllOpponentMonsters.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DrawCardFromTopOfDeck.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/DrawCardFromTopOfDeck.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/EndBattlePhaseAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/EndBattlePhaseAction.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/GuessingCardInOpponentHandAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/GuessingCardInOpponentHandAction.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/MakeDamageZero.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/MakeDamageZero.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/RitualSummonAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/RitualSummonAction.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/StoppingActivationAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/StoppingActivationAction.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/SummonMonsterFromBothGraveYardsAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/SummonMonsterFromBothGraveYardsAction.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/SummonMonsterFromOwnGraveYardAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/SummonMonsterFromOwnGraveYardAction.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/TerraformingAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/magicActionChildren/TerraformingAction.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsProp/Card.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsProp/Card.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsActions/monsterActionChildren/MakeAttackerMonsterAtkZero.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/model/cards/cardsProp/MagicCard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/cards/cardsProp/MagicCard.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/events/Event.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/events/Event.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/enums/GameEnums/RequestingInput.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/enums/GameEnums/RequestingInput.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/events/eventChildren/GotAttacked.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/events/eventChildren/GotDestroyed.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/gameprop/BoardProp/MagicHouse.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/gameprop/BoardProp/MagicHouse.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/gameprop/BoardProp/MonsterHouse.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/gameprop/BoardProp/MonsterHouse.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/gameprop/BoardProp/PlayerBoard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/gameprop/BoardProp/PlayerBoard.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/gameprop/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/gameprop/Player.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/gameprop/turnBasedObserver/ChangeTeamForOneTurn.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/gameprop/turnBasedObserver/ChangeTeamForOneTurn.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -56,11 +53,11 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="Interface" />
         <option value="JUnit5 Test Class" />
         <option value="JUnit4 Test Class" />
         <option value="package-info" />
         <option value="Enum" />
+        <option value="Interface" />
         <option value="Class" />
       </list>
     </option>
@@ -140,6 +137,15 @@
     </option>
   </component>
   <component name="RunManager" selected="Application.Main">
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="ALTERNATIVE_JRE_PATH" value="11" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
+      <option name="MAIN_CLASS_NAME" value="Main" />
+      <module name="untitled" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration default="true" type="ArquillianJUnit" factoryName="" nameIsGenerated="true">
       <option name="arquillianRunConfiguration">
         <value>
@@ -147,15 +153,6 @@
         </value>
       </option>
       <option name="TEST_OBJECT" value="class" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="ALTERNATIVE_JRE_PATH" value="11" />
-      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
-      <option name="MAIN_CLASS_NAME" value="Main" />
-      <module name="project-team-10" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -235,20 +232,16 @@
       <workItem from="1620947078549" duration="229000" />
       <workItem from="1620956538345" duration="13214000" />
       <workItem from="1621006540814" duration="6959000" />
-    </task>
-    <task id="LOCAL-00019" summary="end of task 1 and edit card abstract class">
-      <created>1618960666801</created>
-      <option name="number" value="00019" />
-      <option name="presentableId" value="LOCAL-00019" />
-      <option name="project" value="LOCAL" />
-      <updated>1618960666801</updated>
-    </task>
-    <task id="LOCAL-00020" summary="change jupiter version">
-      <created>1618960706343</created>
-      <option name="number" value="00020" />
-      <option name="presentableId" value="LOCAL-00020" />
-      <option name="project" value="LOCAL" />
-      <updated>1618960706343</updated>
+      <workItem from="1621183058338" duration="4635000" />
+      <workItem from="1621255905090" duration="417000" />
+      <workItem from="1621256356159" duration="11469000" />
+      <workItem from="1621487628359" duration="28000" />
+      <workItem from="1621687262448" duration="2701000" />
+      <workItem from="1621881340791" duration="508000" />
+      <workItem from="1621881876216" duration="10000" />
+      <workItem from="1621964308723" duration="589000" />
+      <workItem from="1621964948167" duration="123000" />
+      <workItem from="1621965114342" duration="36089000" />
     </task>
     <task id="LOCAL-00021" summary="change jupiter version">
       <created>1619211640817</created>
@@ -559,7 +552,21 @@
       <option name="presentableId" value="LOCAL‎۰۰۰۶۷" />
       <updated>1621174939152</updated>
     </task>
-    <option name="localTasksCounter" value="68" />
+    <task id="LOCAL-00068" summary="a small bug fix">
+      <created>1621183475914</created>
+      <option name="number" value="00068" />
+      <option name="presentableId" value="LOCAL-00068" />
+      <option name="project" value="LOCAL" />
+      <updated>1621183475915</updated>
+    </task>
+    <task id="LOCAL-00069" summary="change &quot;ActionOfMagic&quot; to &quot;Action&quot;">
+      <created>1621189617712</created>
+      <option name="number" value="00069" />
+      <option name="presentableId" value="LOCAL-00069" />
+      <option name="project" value="LOCAL" />
+      <updated>1621189617712</updated>
+    </task>
+    <option name="localTasksCounter" value="70" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -579,8 +586,6 @@
   </component>
   <component name="VcsManagerConfiguration">
     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
-    <MESSAGE value="board" />
-    <MESSAGE value="clean code and package classes" />
     <MESSAGE value="show card added and some clean code changes" />
     <MESSAGE value="entery of the game" />
     <MESSAGE value="edit register menu login messages" />
@@ -604,7 +609,9 @@
     <MESSAGE value="restore data:(" />
     <MESSAGE value="add actions completely" />
     <MESSAGE value="game added as an argument to actions" />
-    <option name="LAST_COMMIT_MESSAGE" value="game added as an argument to actions" />
+    <MESSAGE value="a small bug fix" />
+    <MESSAGE value="change &quot;ActionOfMagic&quot; to &quot;Action&quot;" />
+    <option name="LAST_COMMIT_MESSAGE" value="change &quot;ActionOfMagic&quot; to &quot;Action&quot;" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterDefence.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.cards.cardsActions.magicActionChildren;\r\n\r\nimport model.cards.cardsActions.Action;\r\nimport model.cards.cardsProp.MonsterCard;\r\nimport model.gameprop.gamemodel.Game;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ChangingSomeRaceEquipedMonsterDefence extends Action {\r\n    private final ArrayList<String> typesToChangeDefence;\r\n    private final int changeDefence;\r\n    private final int addOrMinus;\r\n    private MonsterCard equipedMonster;\r\n\r\n    {\r\n        name = this.getClass().getSimpleName();\r\n    }\r\n\r\n    public ChangingSomeRaceEquipedMonsterDefence(int changeDefence, int addOrMinus, ArrayList<String> typesToChangeDefence) {\r\n        this.changeDefence = changeDefence;\r\n        this.addOrMinus = addOrMinus;\r\n        this.typesToChangeDefence = typesToChangeDefence;\r\n    }\r\n\r\n    public MonsterCard getEquipedMonster() {\r\n        return equipedMonster;\r\n    }\r\n\r\n    @Override\r\n    public void active(Game game) {\r\n        equipedMonster = Action.equipAMonsterWithSpell(this, game);\r\n        if (typesToChangeDefence.contains(equipedMonster.getRace().toString())) {\r\n            int defence = equipedMonster.getAttack();\r\n            defence += changeDefence * addOrMinus;\r\n            equipedMonster.setDefence(defence);\r\n            isActivatedBefore = true;\r\n        }\r\n        isActivatedBefore = true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterDefence.java b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterDefence.java
--- a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterDefence.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingSomeRaceEquipedMonsterDefence.java	(date 1622140509664)
@@ -1,12 +1,19 @@
 package model.cards.cardsActions.magicActionChildren;
 
+import controller.gamecontrollers.GetStringInputFromView;
 import model.cards.cardsActions.Action;
+import model.cards.cardsProp.MagicCard;
 import model.cards.cardsProp.MonsterCard;
+import model.enums.GameEnums.RequestingInput;
+import model.enums.GameEnums.SideOfFeature;
+import model.gameprop.Player;
+import model.gameprop.existenceBasedObserver.EquipCardObserver;
+import model.gameprop.existenceBasedObserver.ExistenceObserver;
 import model.gameprop.gamemodel.Game;
 
 import java.util.ArrayList;
 
-public class ChangingSomeRaceEquipedMonsterDefence extends Action {
+public class ChangingSomeRaceEquipedMonsterDefence extends Action implements ChangingSomethingByEquipCard{
     private final ArrayList<String> typesToChangeDefence;
     private final int changeDefence;
     private final int addOrMinus;
@@ -28,13 +35,29 @@
 
     @Override
     public void active(Game game) {
+        Player ownerOfCard = game.getPlayer(SideOfFeature.CURRENT);
+
+        MagicCard equipMagicCard = (MagicCard) game.getCardProp().getCard(); // the last selected Card is the spell Card!
+
         equipedMonster = Action.equipAMonsterWithSpell(this, game);
+
         if (typesToChangeDefence.contains(equipedMonster.getRace().toString())) {
-            int defence = equipedMonster.getAttack();
-            defence += changeDefence * addOrMinus;
-            equipedMonster.setDefence(defence);
-            isActivatedBefore = true;
+           String result = change(changeDefence, equipedMonster, equipMagicCard, "Defence", ownerOfCard);
+
+           if (result.equals("Successful")) {
+               ArrayList<ExistenceObserver> existenceObservers = ExistenceObserver.getExistenceObservers();
+               EquipCardObserver lastObserver = (EquipCardObserver) existenceObservers.get(existenceObservers.size() - 1);
+               // it can be guaranteed that the last observer is related to this action!
+               lastObserver.setToRevertAction(this);
+
+               isActivatedBefore = true;
+           } else {
+               active(game);
+           }
+        } else {
+            GetStringInputFromView.getInputFromView(RequestingInput.ERROR_OF_INVALID_MONSTER_CARD_EQUIPPED);
+            active(game);
         }
-        isActivatedBefore = true;
     }
+
 }
Index: src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquippedMonsterDefence.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.cards.cardsActions.magicActionChildren;\r\n\r\nimport model.cards.cardsActions.Action;\r\nimport model.cards.cardsProp.MonsterCard;\r\nimport model.gameprop.gamemodel.Game;\r\n\r\npublic class ChangingEquippedMonsterDefence extends Action {\r\n    private MonsterCard equipedMonster;\r\n    private final int changeDefence;\r\n    private final int addOrMinus;\r\n\r\n    {\r\n        name = this.getClass().getSimpleName();\r\n        equipedMonster = null;\r\n        isActivatedBefore = false;\r\n    }\r\n\r\n    public ChangingEquippedMonsterDefence(int changeDefence, int addOrMinus){\r\n        this.changeDefence = changeDefence;\r\n        this.addOrMinus = addOrMinus;\r\n    }\r\n\r\n    public MonsterCard getEquipedMonster() {\r\n        return equipedMonster;\r\n    }\r\n\r\n    @Override\r\n    public void active(Game game) {\r\n        equipedMonster = Action.equipAMonsterWithSpell(this, game);\r\n        int defence = equipedMonster.getDefence();\r\n        defence += changeDefence * addOrMinus;\r\n        equipedMonster.setDefence(defence);\r\n        isActivatedBefore = true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquippedMonsterDefence.java b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquippedMonsterDefence.java
--- a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquippedMonsterDefence.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingEquippedMonsterDefence.java	(date 1622140509638)
@@ -1,10 +1,19 @@
 package model.cards.cardsActions.magicActionChildren;
 
+import controller.gamecontrollers.GetStringInputFromView;
 import model.cards.cardsActions.Action;
+import model.cards.cardsProp.MagicCard;
 import model.cards.cardsProp.MonsterCard;
+import model.enums.GameEnums.RequestingInput;
+import model.enums.GameEnums.SideOfFeature;
+import model.gameprop.Player;
+import model.gameprop.existenceBasedObserver.EquipCardObserver;
+import model.gameprop.existenceBasedObserver.ExistenceObserver;
 import model.gameprop.gamemodel.Game;
 
-public class ChangingEquippedMonsterDefence extends Action {
+import java.util.ArrayList;
+
+public class ChangingEquippedMonsterDefence extends Action implements ChangingSomethingByEquipCard{
     private MonsterCard equipedMonster;
     private final int changeDefence;
     private final int addOrMinus;
@@ -26,10 +35,25 @@
 
     @Override
     public void active(Game game) {
+        Player ownerOfCard = game.getPlayer(SideOfFeature.CURRENT);
+
+        MagicCard equipMagicCard = (MagicCard) game.getCardProp().getCard(); // the last selected Card is the spell Card!
+
         equipedMonster = Action.equipAMonsterWithSpell(this, game);
-        int defence = equipedMonster.getDefence();
-        defence += changeDefence * addOrMinus;
-        equipedMonster.setDefence(defence);
-        isActivatedBefore = true;
+
+        String result = change(changeDefence, equipedMonster, equipMagicCard, "Defence", ownerOfCard);
+
+        if (result.equals("Successful")) {
+            ArrayList<ExistenceObserver> existenceObservers = ExistenceObserver.getExistenceObservers();
+            EquipCardObserver lastObserver = (EquipCardObserver) existenceObservers.get(existenceObservers.size() - 1);
+            // it can be guaranteed that the last observer is related to this action!
+            lastObserver.setToRevertAction(this);
+
+            isActivatedBefore = true;
+        } else {
+            GetStringInputFromView.getInputFromView(RequestingInput.ERROR_OF_INVALID_MONSTER_CARD_EQUIPPED);
+            active(game);
+        }
     }
+
 }
Index: src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.cards.cardsActions.magicActionChildren;\r\n\r\nimport model.cards.cardsActions.Action;\r\nimport model.enums.GameEnums.SideOfFeature;\r\nimport model.gameprop.BoardProp.MonsterHouse;\r\nimport model.gameprop.gamemodel.Game;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ChangingMonsterAttackAction extends Action {\r\n    private final int changeAttack;\r\n    private final ArrayList<String> typesToChangeAttack;\r\n    private final int addOrMinus;\r\n    private final ArrayList<SideOfFeature> changeWhichTeamMonsterAttack;\r\n\r\n    {\r\n        name = this.getClass().getSimpleName();\r\n    }\r\n\r\n    public ChangingMonsterAttackAction(int changeAttack, ArrayList<String> typesToChangeAttack, int addOrMinus, ArrayList<SideOfFeature> changeWhichTeamMonsterAttack) {\r\n        this.changeAttack = changeAttack;\r\n        this.typesToChangeAttack = typesToChangeAttack;\r\n        this.addOrMinus = addOrMinus;\r\n        this.changeWhichTeamMonsterAttack = changeWhichTeamMonsterAttack;\r\n    }\r\n\r\n    @Override\r\n    public void active(Game game) {\r\n        for (SideOfFeature sideOfFeature : changeWhichTeamMonsterAttack) {\r\n            MonsterHouse[] monsterHouses = game.getPlayer(sideOfFeature).getBoard().getMonsterHouse();\r\n            for (MonsterHouse monsterHouse : monsterHouses) {\r\n                if (typesToChangeAttack.contains(monsterHouse.getMonsterCard().getRace().toString())) {\r\n                    int newAttack = monsterHouse.getMonsterCard().getAttack();\r\n                    newAttack += changeAttack * addOrMinus;\r\n                    monsterHouse.getMonsterCard().setAttack(newAttack);\r\n                }\r\n            }\r\n        }\r\n        isActivatedBefore = true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackAction.java b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackAction.java
--- a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackAction.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterAttackAction.java	(date 1622044326828)
@@ -3,15 +3,19 @@
 import model.cards.cardsActions.Action;
 import model.enums.GameEnums.SideOfFeature;
 import model.gameprop.BoardProp.MonsterHouse;
+import model.gameprop.Player;
+import model.gameprop.existenceBasedObserver.ExistenceObserver;
+import model.gameprop.existenceBasedObserver.FieldCardObserver;
 import model.gameprop.gamemodel.Game;
 
 import java.util.ArrayList;
 
-public class ChangingMonsterAttackAction extends Action {
+public class ChangingMonsterAttackAction extends Action implements ChangingSomethingByFieldCard {
     private final int changeAttack;
     private final ArrayList<String> typesToChangeAttack;
     private final int addOrMinus;
     private final ArrayList<SideOfFeature> changeWhichTeamMonsterAttack;
+    private int finalChangeValue;
 
     {
         name = this.getClass().getSimpleName();
@@ -24,18 +28,31 @@
         this.changeWhichTeamMonsterAttack = changeWhichTeamMonsterAttack;
     }
 
+    public int getFinalChangeValue() {
+        return finalChangeValue;
+    }
+
+    public ArrayList<String> getTypesToChangeAttack() {
+        return typesToChangeAttack;
+    }
+
+    public ArrayList<SideOfFeature> getChangeWhichTeamMonsterAttack() {
+        return changeWhichTeamMonsterAttack;
+    }
+
+
     @Override
     public void active(Game game) {
-        for (SideOfFeature sideOfFeature : changeWhichTeamMonsterAttack) {
-            MonsterHouse[] monsterHouses = game.getPlayer(sideOfFeature).getBoard().getMonsterHouse();
-            for (MonsterHouse monsterHouse : monsterHouses) {
-                if (typesToChangeAttack.contains(monsterHouse.getMonsterCard().getRace().toString())) {
-                    int newAttack = monsterHouse.getMonsterCard().getAttack();
-                    newAttack += changeAttack * addOrMinus;
-                    monsterHouse.getMonsterCard().setAttack(newAttack);
-                }
-            }
-        }
+        finalChangeValue = changeAttack * addOrMinus;
+
+        Player currentPlayer = game.getPlayer(SideOfFeature.CURRENT);
+        change(finalChangeValue, changeWhichTeamMonsterAttack, typesToChangeAttack, currentPlayer, "Attack");
+
+        ArrayList<ExistenceObserver> existenceObservers = ExistenceObserver.getExistenceObservers();
+        FieldCardObserver lastObserver = (FieldCardObserver) existenceObservers.get(existenceObservers.size() - 1);
+        // it can be guaranteed that the last observer is from this type as the last one is added just moments (lines!) before in "change()"!
+        lastObserver.setToRevertAction(this);
+
         isActivatedBefore = true;
     }
 }
Index: src/main/java/controller/gamecontrollers/gamestagecontroller/HeadController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.gamecontrollers.gamestagecontroller;\r\n\r\nimport com.sanityinc.jargs.CmdLineParser;\r\nimport controller.gamecontrollers.GeneralController;\r\nimport viewer.Regex;\r\n\r\npublic class HeadController {\r\n    DrawPhaseController drawPhaseController;\r\n    SideStageController sideStageController;\r\n    MainPhaseController mainPhaseController;\r\n    StandByPhaseController standByPhaseController;\r\n    GeneralController generalController;\r\n    BattlePhaseController battlePhaseController;\r\n\r\n    public HeadController() {\r\n        drawPhaseController = DrawPhaseController.getInstance();\r\n        standByPhaseController = StandByPhaseController.getInstance();\r\n        sideStageController = SideStageController.getInstance();\r\n        mainPhaseController = MainPhaseController.getInstance();\r\n        generalController = GeneralController.getInstance();\r\n        battlePhaseController = BattlePhaseController.getInstance();\r\n    }\r\n\r\n    public String run(String command) throws CmdLineParser.OptionException {\r\n        if (isGeneralCommand(command)) return generalController.run(command);\r\n        else if (isSideStageCommand(command)) return sideStageController.run(command);\r\n        else {\r\n            return getCommandController(command).run(command);\r\n        }\r\n    }\r\n\r\n\r\n    private boolean isGeneralCommand(String command) {\r\n        for (String generalPattern : Regex.generalCommands) {\r\n            if (command.matches(generalPattern)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private boolean isSideStageCommand(String command) {\r\n        for (String commandPattern : Regex.sideStageCommand) {\r\n            if (command.matches(commandPattern)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    private GeneralController getCommandController(String command) {\r\n        for (String commandPattern : Regex.mainPhaseCommands) {\r\n            if (command.matches(commandPattern)) {\r\n                return mainPhaseController;\r\n            }\r\n        }\r\n        for (String commandPatter : Regex.battlePhaseCommands) {\r\n            if (command.matches(commandPatter)) {\r\n                return battlePhaseController;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controller/gamecontrollers/gamestagecontroller/HeadController.java b/src/main/java/controller/gamecontrollers/gamestagecontroller/HeadController.java
--- a/src/main/java/controller/gamecontrollers/gamestagecontroller/HeadController.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/controller/gamecontrollers/gamestagecontroller/HeadController.java	(date 1622126643678)
@@ -2,8 +2,11 @@
 
 import com.sanityinc.jargs.CmdLineParser;
 import controller.gamecontrollers.GeneralController;
+import model.gameprop.existenceBasedObserver.ExistenceObserver;
 import viewer.Regex;
 
+import java.util.ArrayList;
+
 public class HeadController {
     DrawPhaseController drawPhaseController;
     SideStageController sideStageController;
@@ -22,6 +25,11 @@
     }
 
     public String run(String command) throws CmdLineParser.OptionException {
+        ArrayList<ExistenceObserver> existenceObservers = ExistenceObserver.getExistenceObservers();
+        for (ExistenceObserver existenceObserver : existenceObservers) {
+            existenceObserver.update();
+        }
+
         if (isGeneralCommand(command)) return generalController.run(command);
         else if (isSideStageCommand(command)) return sideStageController.run(command);
         else {
Index: src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterDefenceAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.cards.cardsActions.magicActionChildren;\r\n\r\nimport model.cards.cardsActions.Action;\r\nimport model.enums.GameEnums.SideOfFeature;\r\nimport model.gameprop.BoardProp.MonsterHouse;\r\nimport model.gameprop.gamemodel.Game;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ChangingMonsterDefenceAction extends Action {\r\n    private final int changeDefence;\r\n    private final ArrayList<String> typesToChangeDefence;\r\n    private final int addOrMinus;\r\n    private final ArrayList<SideOfFeature> changeWhichTeamMonsterDefence;\r\n\r\n    {\r\n        name = this.getClass().getSimpleName();\r\n    }\r\n\r\n    public ChangingMonsterDefenceAction(int changeDefence, ArrayList<String> typesToChangeDefence, int addOrMinus, ArrayList<SideOfFeature> changeWhichTeamMonsterDefence) {\r\n        this.changeDefence = changeDefence;\r\n        this.typesToChangeDefence = typesToChangeDefence;\r\n        this.addOrMinus = addOrMinus;\r\n        this.changeWhichTeamMonsterDefence = changeWhichTeamMonsterDefence;\r\n    }\r\n\r\n    @Override\r\n    public void active(Game game) {\r\n        for (SideOfFeature sideOfFeature : changeWhichTeamMonsterDefence) {\r\n            MonsterHouse[] monsterHouses = game.getPlayer(sideOfFeature).getBoard().getMonsterHouse();\r\n            for (MonsterHouse monsterHouse : monsterHouses) {\r\n                if (typesToChangeDefence.contains(monsterHouse.getMonsterCard().getRace().toString())) {\r\n                    int newDefence = monsterHouse.getMonsterCard().getAttack();\r\n                    newDefence += changeDefence * addOrMinus;\r\n                    monsterHouse.getMonsterCard().setAttack(newDefence);\r\n                }\r\n            }\r\n        }\r\n        isActivatedBefore = true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterDefenceAction.java b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterDefenceAction.java
--- a/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterDefenceAction.java	(revision 594b710f6582efdd40a7ebcdaa3c480d3ae80ecf)
+++ b/src/main/java/model/cards/cardsActions/magicActionChildren/ChangingMonsterDefenceAction.java	(date 1622044326845)
@@ -3,15 +3,19 @@
 import model.cards.cardsActions.Action;
 import model.enums.GameEnums.SideOfFeature;
 import model.gameprop.BoardProp.MonsterHouse;
+import model.gameprop.Player;
+import model.gameprop.existenceBasedObserver.ExistenceObserver;
+import model.gameprop.existenceBasedObserver.FieldCardObserver;
 import model.gameprop.gamemodel.Game;
 
 import java.util.ArrayList;
 
-public class ChangingMonsterDefenceAction extends Action {
+public class ChangingMonsterDefenceAction extends Action implements ChangingSomethingByFieldCard {
     private final int changeDefence;
     private final ArrayList<String> typesToChangeDefence;
     private final int addOrMinus;
     private final ArrayList<SideOfFeature> changeWhichTeamMonsterDefence;
+    private int finalChangeValue;
 
     {
         name = this.getClass().getSimpleName();
@@ -24,18 +28,30 @@
         this.changeWhichTeamMonsterDefence = changeWhichTeamMonsterDefence;
     }
 
+    public ArrayList<SideOfFeature> getChangeWhichTeamMonsterDefence() {
+        return changeWhichTeamMonsterDefence;
+    }
+
+    public ArrayList<String> getTypesToChangeDefence() {
+        return typesToChangeDefence;
+    }
+
+    public int getFinalChangeValue() {
+        return finalChangeValue;
+    }
+
     @Override
     public void active(Game game) {
-        for (SideOfFeature sideOfFeature : changeWhichTeamMonsterDefence) {
-            MonsterHouse[] monsterHouses = game.getPlayer(sideOfFeature).getBoard().getMonsterHouse();
-            for (MonsterHouse monsterHouse : monsterHouses) {
-                if (typesToChangeDefence.contains(monsterHouse.getMonsterCard().getRace().toString())) {
-                    int newDefence = monsterHouse.getMonsterCard().getAttack();
-                    newDefence += changeDefence * addOrMinus;
-                    monsterHouse.getMonsterCard().setAttack(newDefence);
-                }
-            }
-        }
+        finalChangeValue = changeDefence * addOrMinus;
+
+        Player currentPlayer = game.getPlayer(SideOfFeature.CURRENT);
+        change(finalChangeValue, changeWhichTeamMonsterDefence, typesToChangeDefence, currentPlayer, "Defence");
+
+        ArrayList<ExistenceObserver> existenceObservers = ExistenceObserver.getExistenceObservers();
+        FieldCardObserver lastObserver = (FieldCardObserver) existenceObservers.get(existenceObservers.size() - 1);
+        // it can be guaranteed that the last observer is from this type as the last one is added just moments (lines!) before in "change()"!
+        lastObserver.setToRevertAction(this);
+
         isActivatedBefore = true;
     }
 }
